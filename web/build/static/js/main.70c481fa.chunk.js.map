{"version":3,"sources":["api.js","analytics.js","components/TimeInput.js","components/AnimatingButton.js","helpers/time.js","pages/Home.js","pages/Intro.js","components/StripeCardEntry.js","pages/Payment.js","pages/FinishOnboarding.js","pages/LandingPage.js","pages/PrivacyPolicy.js","pages/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["cookies","Cookies","console","log","process","apiServer","trim","post","route","payload","a","token","get","headers","Accept","Authorization","btoa","fetch","method","body","JSON","stringify","fetchResult","ok","text","parse","status","params","url","qs","login","phoneNumber","secretCode","password","response","pullPatientData","calendarMonth","pullPatientDataForNumber","pullPatientPaymentData","updateDoseWindow","updatedDoseWindow","deleteDoseWindow","dwId","doseWindowId","pauseUser","resumeUser","setHealthMetricsTracking","metricList","submitPaymentInfo","cancelSubscription","renewSubscription","landingPageSignup","name","email","trialCode","getPatientState","getUserProfile","updateUserTimezone","timezone","updateUserPassword","ReactGA","initialize","cookieFlags","shouldLogAnalytics","trackPausedService","userId","event","category","action","label","TimeInput","value","onChangeTime","React","useState","hour","setHour","minute","setMinute","Box","direction","Select","options","plain","onChange","newHour","toString","parseInt","AnimatingButton","animating","props","Button","alignSelf","disabled","Spinner","color","children","getCurrentStandardTimezone","localTime","DateTime","local","localTimeOffset","offset","isInDST","Home","useCookies","setCookie","removeCookie","patientData","setPatientData","setCalendarMonth","impersonateOptions","setImpersonateOptions","impersonating","setImpersonating","selectedDay","setSelectedDay","editingDoseWindow","setEditingDoseWindow","deletingDoseWindow","setDeletingDoseWindow","editingHealthTracking","setEditingHealthTracking","timeRange","setTimeRange","history","useHistory","setAnimating","dateRange","loadData","useCallback","loadedData","impersonateList","patientId","map","tuple_data","shouldRerender","useMemo","month","useEffect","renderDay","date","dayColor","dt","fromJSDate","day","eventData","length","dayOfMonthData","day_status","align","justify","margin","vertical","width","height","round","background","Paragraph","formattedHealthMetricData","units","weight","glucose","data","metric","healthMetricData","metric_list","datasets","x","fromHTTP","time","y","fill","backgroundColor","borderColor","scales","type","unit","grid","ticks","min","minus","days","toISODate","title","display","plugins","legend","elements","point","hitRadius","hoverRadius","showLine","systolic","diastolic","datalabels","timezoneDiscrepancy","localtz","renderImpersonateListItem","listItem","nextDayConversion","plus","validDoseWindows","editingStartTime","utc","start_hour","start_minute","setZone","set","editingEndTime","end_hour","end_minute","minutes","doseWindows","dw","id","existingStartTime","existingEndTime","currentTimeOfDay","currentTime","dateToDisplay","currentDay","randomHeaderEmoji","arr","Math","floor","random","renderDoseWindowEditFields","startTime","endTime","size","bottom","newTime","newDwTime","onClick","padding","horizontal","top","to","includes","state","gap","pad","option","earlyAdopterStatus","right","Fireball","Heading","patientName","textAlign","subscriptionEndDate","toLocaleString","DATE_MED","push","takeNow","animation","DropButton","icon","CircleInformation","dropContent","Anchor","href","CirclePlay","Grid","columns","justifyContent","column","dropAlign","Calendar","toISO","onSelect","fromISO","showAdjacentDays","bounds","daysOfWeek","onReference","animate","Layer","onEsc","onClickOutside","responsive","monthLong","Close","Object","keys","time_of_day","sort","t1","t2","key","numberSuffix","index","left","Date","TIME_SIMPLE","Checkmark","Clear","valueLabel","CheckBoxGroup","e","border","alignContent","FormNextLink","Add","pausedService","style","primary","UserSettings","Logout","Intro","setPhoneNumber","setSecretCode","setPassword","passwordConfirm","setPasswordConfirm","componentToDisplay","setComponentToDisplay","authError","setAuthError","submitAll","getInputField","TextInput","Phone","placeholder","target","Lock","flex","FormPreviousLink","grow","dark","Login","StripeCardEntry","submitText","clientSecret","afterSubmitAction","payOnSubmit","stripe","useStripe","useElements","validatingCard","setValidatingCard","ready","setReady","formFilled","setFormFilled","submitPayment","cardElement","getElement","CardElement","stripeReturnData","confirmCardPayment","payment_method","card","billing_details","setup_future_usage","confirmCardSetup","onReady","complete","error","Payment","location","useLocation","loading","setLoading","paymentData","setPaymentData","addCardModalVisible","setAddCardModalVisible","payWithCardModalVisible","setPayWithCardModalVisible","cancelModalVisible","setCancelModalVisible","pathname","stripePromise","loadStripe","publishable_key","secondary_state","client_secret","subscription_end_date","brand","last4","FinishOnboarding","stateData","loadState","heading_copy_1","heading_copy_2","heading_copy_3","differentiator_copy_1","differentiator_copy_2","differentiator_copy_3","differentiator_copy_4","differentiator_copy_5","differentiator_copy_6","differentiator_copy_7","feature_copy_1","reviews_copy_1","reviews_copy_2","reviews_copy_3","reviews_copy_4","reviews_copy_5","reviews_copy_6","reviews_copy_7","cta_copy_1","cta_copy_2","LandingPage","setName","setEmail","freeTrialCode","setFreeTrialCode","submittedForm","setSubmittedForm","formButtonState","test","replace","toLowerCase","Image","fit","src","Favorite","Info","wrap","Star","reverse","PrivacyPolicy","whiteSpace","Settings","userProfileData","setUserProfileData","editingField","setEditingField","newPassword1","setNewPassword1","newPassword2","setNewPassword2","closeEditingWindow","updated","original","pullUserProfileData","Tabs","Tab","ContactInfo","early_adopter","onboarding_type","App","exact","path","render","ResponsiveContext","Consumer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CookiesProvider","Grommet","theme","global","colors","light","paragraph","breakpoints","xsmall","small","medium","large","xlarge","spinner","container","tab","active","themeMode","document","getElementById"],"mappings":"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","file":"static/js/main.70c481fa.chunk.js","sourcesContent":["import * as qs from 'query-string';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nconsole.log(process.env.NODE_ENV);\nconst apiServer = process.env.NODE_ENV.trim() === \"production\" ? \"https://coherence-chat.herokuapp.com\" : 'http://localhost:5000';\n\nconst post = async (route, payload) => {\n  const token = cookies.get('token');\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    \"Access-Control-Allow_Methods\": \"POST\",\n    \"Access-Control_Allow_Headers\": \"*\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  };\n  if (token) {\n    headers.Authorization = 'Basic ' + btoa(token + \":unused\");\n  }\n  const fetchResult = await fetch(`${apiServer}/${route}`, {\n    method: 'post',\n    headers,\n    body: JSON.stringify(payload),\n  });\n\n  if (fetchResult.ok) {\n    const text = await fetchResult.text();\n    return JSON.parse(text);\n  }\n  console.log(\n    `POST call to /${route} errored with status ${fetchResult.status}`,\n  );\n  return null;\n};\n\nconst get = async (route, params) => {\n  let url = `${apiServer}/${route}`;\n  url += `?${qs.stringify(params)}`;\n\n  const token = cookies.get('token');\n  const headers = {\n    Accept: 'application/json',\n    \"Access-Control-Allow-Methods\": \"GET\",\n    \"Access-Control-Allow-Headers\": \"*\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  };\n  if (token) {\n    headers.Authorization = 'Basic ' + btoa(token + \":unused\");\n  }\n  const fetchResult = await fetch(url, {\n    method: 'get',\n    headers,\n  });\n  if (fetchResult.ok) {\n    const text = await fetchResult.text();\n    console.log(text);\n    return JSON.parse(text);\n  }\n  console.log(\n    `GET call to /${route} errored with status ${fetchResult.status}`,\n  );\n  return null;\n};\n\nexport const login = async (phoneNumber, secretCode, password) => {\n    const response = await post(\"login/new\", { phoneNumber, secretCode, password });\n    return response;\n}\n\nexport const pullPatientData = async (calendarMonth) => {\n  const response = await get(\"patientData/new\", { calendarMonth });\n  return response;\n}\n\nexport const pullPatientDataForNumber = async (phoneNumber, calendarMonth) => {\n  const response = await get(\"patientData/new\", { phoneNumber, calendarMonth });\n  return response;\n}\n\nexport const pullPatientPaymentData = async () => {\n  console.log(\"calling this at least?\")\n  const response = await get(\"user/getPaymentData\", {});\n  return response;\n}\n\nexport const updateDoseWindow = async (updatedDoseWindow) => {\n  const response = await post(\"doseWindow/update/new\", { updatedDoseWindow });\n  return response;\n}\n\nexport const deleteDoseWindow = async (dwId) => {\n  const response = await post(\"doseWindow/deactivate/new\", { doseWindowId: dwId });\n  return response;\n}\n\nexport const pauseUser = async () => {\n  const response = await post(\"user/pause/new\");\n  return response;\n}\n\nexport const resumeUser = async () => {\n  const response = await post(\"user/resume/new\");\n  return response;\n}\n\nexport const setHealthMetricsTracking = async (metricList) => {\n  const response = await post(\"user/healthMetrics/set\", { metricList });\n  return response;\n}\n\nexport const submitPaymentInfo = async () => {\n  const response = await post(\"user/submitPaymentInfo\", {});\n  return response;\n}\n\nexport const cancelSubscription = async () => {\n  console.log(\"attempting to cancel sub\");\n  const response = await post(\"user/cancelSubscription\", {});\n  return response;\n}\n\nexport const renewSubscription = async () => {\n  const response = await post(\"user/renewSubscription\", {});\n  return response;\n}\n\nexport const landingPageSignup = async (name, email, phoneNumber, trialCode) => {\n  const response = await post(\"user/landingPageSignup\", {\n    name, email, phoneNumber, trialCode\n  });\n  return response;\n}\n\nexport const getPatientState = async () => {\n  const response = await get(\"patientState\",  {});\n  return response;\n}\n\nexport const getUserProfile = async () => {\n  const response = await get(\"user/profile\", {});\n  return response;\n}\n\n// TODO: only submit timezone\nexport const updateUserTimezone = async (timezone) => {\n  const response = await post(\"user/updateTimezone\", { timezone });\n  return response;\n}\n\nexport const updateUserPassword = async (password) => {\n  const response = await post(\"user/password\", { password });\n  return response;\n}","import ReactGA from 'react-ga';\n\nReactGA.initialize('UA-196778289-2', {cookieFlags: 'max-age=7200;SameSite=None;Secure'});\n\nconst shouldLogAnalytics = process.env.NODE_ENV.trim() === \"production\";\n\nexport const trackPatientPortalLoad = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Loaded homepage\",\n            label: userId\n        });\n    }\n}\n\nexport const trackViewedDayDetails = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Viewed day details\",\n            label: userId\n        });\n    }\n}\n\nexport const trackStartAddingDoseWindow = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Start adding dose window\",\n            label: userId\n        });\n    }\n}\n\nexport const trackStartEditingDoseWindow = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Start editing dose window\",\n            label: userId\n        });\n    }\n}\n\nexport const trackSubmitEditedDoseWindow = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Submit edited dose window\",\n            label: userId\n        });\n    }\n}\n\nexport const trackStartDeletingDoseWindow = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Start deleting dose window\",\n            label: userId\n        });\n    }\n}\n\nexport const trackSubmitDeletingDoseWindow = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Submit deleting dose window\",\n            label: userId\n        });\n    }\n}\n\nexport const trackStartEditingHealthMetrics = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Start editing health metrics\",\n            label: userId\n        });\n    }\n}\n\nexport const trackSubmitEditingHealthMetrics = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Engagement\",\n            action: \"Submit editing health metrics\",\n            label: userId\n        });\n    }\n}\n\nexport const trackPausedService = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Churn\",\n            action: \"Paused service\",\n            label: userId\n        });\n    }\n}\n\nexport const trackResumedService = (userId) => {\n    if (shouldLogAnalytics) {\n        ReactGA.event({\n            category: \"Growth\",\n            action: \"Resumed service\",\n            label: userId\n        });\n    }\n}","import React from \"react\";\n\nimport { Box, Select } from \"grommet\";\n\nconst TimeInput = ({value, onChangeTime}) => {\n    const [hour, setHour] = React.useState(value.hour);\n    const [minute, setMinute] = React.useState(value.minute);\n    return (\n        <Box direction=\"row\">\n            <Select options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]} value={hour > 12 ? hour - 12 : (hour === 0 ? 12 : hour)} plain\n                onChange={\n                    ({value}) => {\n                        let newHour = hour >= 12 ? value + 12 : value % 12;\n                        setHour(newHour);\n                        onChangeTime({hour: newHour, minute});\n                    }\n                }\n            />\n            <Select options={[\"00\", \"15\", \"30\", \"45\"]} value={`${minute === 0 ? '0' : ''}${minute.toString()}`} plain onChange={({value}) => {\n                setMinute(parseInt(value));\n                onChangeTime({hour, minute: parseInt(value)});\n            }}/>\n            <Select options={[\"AM\", \"PM\"]} value={hour >= 12 ? \"PM\" : \"AM\"} plain onChange={({value}) => {\n                let newHour = hour;\n                if (value === \"AM\") {\n                    if (hour >= 12) {\n                        newHour = hour - 12;\n                        setHour(hour - 12);\n                    }\n                } else {\n                    if (hour < 12) {\n                        newHour = hour + 12;\n                        setHour(hour + 12);\n                    }\n                }\n                onChangeTime({hour: newHour, minute});\n            }}/>\n        </Box>\n    )\n}\n\nexport default TimeInput;","import React from \"react\";\nimport { Button, Spinner } from \"grommet\";\nimport { get } from \"lodash\";\n\nconst AnimatingButton = ({animating, ...props}) => {\n    if (animating) {\n        return <Button {...props} alignSelf=\"center\" label={null} disabled={true}><Spinner color={get(props, \"background.dark\", false) ? \"#FFF\" : \"brand\"}/></Button>;\n    } else {\n        return <Button {...props}>{props.children}</Button>;\n    }\n}\n\nexport default AnimatingButton;","import { DateTime } from 'luxon';\n\nexport const getCurrentStandardTimezone = () => {\n    const localTime = DateTime.local();\n    let localTimeOffset = localTime.offset;\n    if (localTime.isInDST) {\n        localTimeOffset -= 60;\n    }\n    if (localTimeOffset === -480) {\n        return \"US/Pacific\";\n    } else if (localTimeOffset === -420) {\n        return \"US/Mountain\";\n    } else if (localTimeOffset === -360) {\n        return \"US/Central\";\n    } else if (localTimeOffset === -300) {\n        return \"US/Eastern\";\n    } else {\n        return null;\n    }\n}","import React from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport {\n    deleteDoseWindow,\n    pauseUser,\n    pullPatientData,\n    pullPatientDataForNumber,\n    resumeUser,\n    setHealthMetricsTracking,\n    updateDoseWindow,\n    updateUserTimezone\n} from '../api';\nimport {\n    trackStartAddingDoseWindow,\n    trackPatientPortalLoad,\n    trackViewedDayDetails,\n    trackStartDeletingDoseWindow,\n    trackStartEditingDoseWindow,\n    trackStartEditingHealthMetrics,\n    trackSubmitDeletingDoseWindow,\n    trackSubmitEditedDoseWindow,\n    trackSubmitEditingHealthMetrics,\n    trackResumedService,\n    trackPausedService\n} from '../analytics';\nimport { Scatter } from 'react-chartjs-2';\nimport { Box, Button, CheckBoxGroup, Calendar, DropButton, Grid, Heading, Layer, Paragraph, Select, Anchor } from \"grommet\";\nimport { Add, Checkmark, CircleInformation, CirclePlay, Clear, Close, Fireball, FormNextLink, Logout, UserSettings} from \"grommet-icons\";\nimport { DateTime } from 'luxon';\nimport 'chartjs-adapter-luxon';\nimport TimeInput from \"../components/TimeInput\";\nimport AnimatingButton from \"../components/AnimatingButton\";\n\nimport { getCurrentStandardTimezone } from \"../helpers/time\";\n\nconst Home = () => {\n    console.log(getCurrentStandardTimezone());\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const [patientData, setPatientData] = React.useState(null);\n    const [calendarMonth, setCalendarMonth] = React.useState(5);\n    const [impersonateOptions, setImpersonateOptions] = React.useState(null);\n    const [impersonating, setImpersonating] = React.useState(null);\n    const [selectedDay, setSelectedDay] = React.useState(null);\n    const [editingDoseWindow, setEditingDoseWindow] = React.useState(null);\n    const [deletingDoseWindow, setDeletingDoseWindow] = React.useState(null);\n    const [editingHealthTracking, setEditingHealthTracking] = React.useState(null);\n    const [timeRange, setTimeRange] = React.useState({label: \"all time\", value: null});\n    const history = useHistory();\n    console.log(timeRange);\n    const [animating, setAnimating] = React.useState(false);  // this is setting animating for ALL buttons for now\n\n    const dateRange = [DateTime.local(2021, 4, 1), DateTime.local(2021, 5, 31)]\n\n    const loadData = React.useCallback(async () => {\n        console.log(\"data load\");\n        let loadedData = null;\n        if (impersonating) {\n            loadedData = await pullPatientDataForNumber(impersonating.value, calendarMonth);\n        } else {\n            loadedData = await pullPatientData(calendarMonth);\n        };\n        if (loadedData === null) {\n            console.log(\"removing token\");\n            removeCookie(\"token\");\n            return;\n        }\n        console.log(loadedData);\n        setPatientData(loadedData);\n        if (loadedData.impersonateList === null) { // only track non impersonating data\n            trackPatientPortalLoad(loadedData.patientId);\n        }\n        setCookie('token', loadedData.token);  // refresh login token\n        if (loadedData.impersonateList) {\n            setImpersonateOptions(\n                loadedData.impersonateList.map((tuple_data) => { return { label: tuple_data[0], value: tuple_data[1]}})\n            );\n        }\n        setAnimating(false);\n    }, [calendarMonth, impersonating, removeCookie, setCookie])\n\n    const shouldRerender = React.useMemo(() => {\n        console.log(\"should rerender\");\n        console.log(cookies);\n        if (!cookies.token) {\n            console.log(\"not loading because token is empty.\");\n            return false;\n        }\n        if (patientData === null) {\n            return true;\n        }\n        if (patientData.month !== calendarMonth) {\n            return true;\n        }\n        if (!!impersonating !== !! patientData.impersonating) {\n            return true;\n        }\n        if (impersonating && patientData.impersonating && patientData.phoneNumber !== impersonating.value) {\n            return true;\n        }\n        return false;\n    }, [calendarMonth, cookies, impersonating, patientData]);\n\n    React.useEffect(() => {\n        console.log(\"rerendering\");\n        console.log(shouldRerender);\n        if (shouldRerender) {\n            loadData();\n        }\n    }, [loadData, shouldRerender]);\n\n    const logout = () => {\n        removeCookie(\"token\");\n    }\n\n    const renderDay = React.useCallback(({date}) => {\n        let dayColor = null;\n        const dt = DateTime.fromJSDate(date);\n        const day = dt.day;\n        if (patientData !== null) {\n            if (patientData.eventData.length >= day) {\n                const dayOfMonthData = patientData.eventData[day - 1];\n                if (dt.month === calendarMonth) {\n                    if (dayOfMonthData.day_status === \"taken\") {\n                        dayColor = \"status-ok\";\n                    } else if (dayOfMonthData.day_status === \"missed\") {\n                        dayColor = \"status-error\";\n                    } else if (dayOfMonthData.day_status === \"skip\") {\n                        dayColor = \"status-warning\";\n                    }\n                }\n            }\n        }\n        return (\n            <Box align=\"center\" justify=\"center\" margin={{vertical: \"xsmall\"}}>\n                <Box width=\"30px\" height=\"30px\" round=\"medium\" background={{color: dayColor}} align=\"center\" justify=\"center\">\n                    <Paragraph>{day}</Paragraph>\n                </Box>\n            </Box>\n        );\n    }, [calendarMonth, patientData]);\n\n    const formattedHealthMetricData = React.useMemo(() => {\n        const units = {\n            weight: \"pounds\",\n            glucose: \"mg/dL\",\n            \"blood pressure\": \"mm/hg\"\n        }\n        const data = {}\n        if (patientData !== null) {\n            for (const metric in patientData.healthMetricData) {\n                const metric_list = patientData.healthMetricData[metric];\n                console.log(metric_list);\n                if (metric !== \"blood pressure\") {\n                    data[metric] = {\n                        datasets: [{\n                            data: metric_list.map((metric) => {\n                                const jsTime = DateTime.fromHTTP(metric.time);\n                                return {x: jsTime, y: metric.value};\n                            }),\n                            label: metric,\n                            fill: false,\n                            backgroundColor: 'rgb(255, 99, 132)',\n                            borderColor: 'rgba(255, 99, 132, 0.2)'\n                        }], options:{\n                                scales: {\n                                    x: {\n                                        type: \"time\",\n                                        time: {unit: \"day\"},\n                                        grid: {\"color\": [\"#777\"]},\n                                        ticks:{color: \"#FFF\"},\n                                        min: timeRange.value !== null ? DateTime.local().minus({days: timeRange.value}).toISODate() : null},\n                                    y: {grid: {\"color\": [\"#AAA\"]}, ticks:{color: \"#FFF\"}, title: {text:units[metric], display: true, color: \"#FFF\"}}\n                                },\n                                color: \"white\",\n                                plugins: {\n                                    legend: {display: false},\n                                },\n                                elements: {\n                                    point: {\n                                        hitRadius: 10,\n                                        hoverRadius: 10\n                                    }\n                                },\n                                showLine: true\n                        }\n                    };\n                } else { // blood pressure has two timeseries\n                    data[metric] = {\n                        datasets: [\n                        {\n                            data: metric_list.map((metric) => {\n                                const jsTime = DateTime.fromHTTP(metric.time);\n                                return {x: jsTime, y: metric.value.systolic};\n                            }),\n                            label: \"systolic\",\n                            fill: false,\n                            backgroundColor: 'rgb(255, 99, 132)',\n                            borderColor: 'rgba(255, 99, 132, 0.2)'\n                        },\n                        {\n                            data: metric_list.map((metric) => {\n                                const jsTime = DateTime.fromHTTP(metric.time);\n                                return {x: jsTime, y: metric.value.diastolic};\n                            }),\n                            label: \"diastolic\",\n                            fill: false,\n                            backgroundColor: 'rgb(99, 255, 132)',\n                            borderColor: 'rgba(99, 255, 132, 0.2)'\n                        }\n                    ], options:{\n                        scales: {\n                            x: {\n                                type: \"time\",\n                                time: {unit: \"day\"},\n                                grid: {\"color\": [\"#777\"]},\n                                ticks:{color: \"#FFF\"},\n                                min: timeRange.value !== null ? DateTime.local().minus({days: timeRange.value}).toISODate() : null\n                            },\n                            y: {grid: {\"color\": [\"#AAA\"]}, ticks:{color: \"#FFF\"}, title: {text:units[metric], display: true, color: \"#FFF\"}}\n                        },\n\n                        color: \"white\",\n                        plugins: {\n                            datalabels: {color: 'black'}\n                        },\n                        elements: {\n                            point: {\n                                hitRadius: 10,\n                                hoverRadius: 10\n                            }\n                        },\n                        showLine: true\n                    }\n                    };\n                }\n            }\n        }\n        console.log(\"returned HM data:\")\n        console.log(data);\n\n        return data;\n    }, [patientData, timeRange]);\n\n    const timezoneDiscrepancy = React.useMemo(() => {\n        const localtz = getCurrentStandardTimezone();\n        if (patientData && patientData.timezone !== localtz) {\n            return true;\n        }\n       return false;\n    }, [patientData]);\n\n    const renderImpersonateListItem = React.useCallback((listItem) => {\n        console.log(listItem);\n        return listItem.label;\n    }, [])\n\n    const nextDayConversion = (dt) => {\n        if (dt.hour < 4) {\n            return dt.plus({days: 1});\n        }\n        return dt;\n    }\n\n    const validDoseWindows = React.useMemo(() => {\n        console.log(\"recomputing\")\n        if (editingDoseWindow === null) {\n            return true; // if you're not editing anything you're valid\n        };\n        if (patientData === null) {\n            return true;  // if we have no patient data your dose windows are fine\n        };\n        const editingStartTime = nextDayConversion(DateTime.utc(2021, 5, 1, editingDoseWindow.start_hour, editingDoseWindow.start_minute).setZone(\"local\").set({month: 5, day: 1}));\n        const editingEndTime = nextDayConversion(DateTime.utc(2021, 5, 1, editingDoseWindow.end_hour, editingDoseWindow.end_minute).setZone(\"local\").set({month: 5, day: 1}));\n        if (editingEndTime < editingStartTime.plus({minutes: 30})) {\n            return false; // dose window is too short\n        }\n        for (const dw of patientData.doseWindows) {\n            if (dw.id === editingDoseWindow.id) {\n                continue;  // we don't compare to the one we're editing\n            }\n            const existingStartTime = nextDayConversion(DateTime.utc(2021, 5, 1, dw.start_hour, dw.start_minute).setZone(\"local\").set({month: 5, day: 1}));\n            const existingEndTime = nextDayConversion(DateTime.utc(2021, 5, 1, dw.end_hour, dw.end_minute).setZone(\"local\").set({month: 5, day: 1}));\n            if (editingStartTime <= existingStartTime && existingStartTime <= editingEndTime) {\n                return false;\n            }\n            if (editingStartTime <= existingEndTime && existingEndTime <= editingEndTime) {\n                return false;\n            }\n        }\n        return true;\n    }, [editingDoseWindow, patientData]);\n\n    const currentTimeOfDay = React.useMemo(() => {\n        const currentTime = DateTime.local();\n        if (currentTime.hour > 4 && currentTime.hour < 12) {\n            return \"morning\";\n        } else if (currentTime.hour > 12 && currentTime.hour < 18) {\n            return \"afternoon\";\n        } else {\n            return \"evening\"\n        }\n    }, []);\n\n    const dateToDisplay = React.useMemo(() => {\n        const currentDay = DateTime.local();\n        if (calendarMonth === currentDay.month) {\n            return currentDay;\n        } else {\n            return currentDay.set({month: calendarMonth, day: 1});\n        }\n    }, [calendarMonth])\n\n    const randomChoice = (arr) => {\n        return arr[Math.floor(arr.length * Math.random())];\n    }\n    const randomHeaderEmoji = React.useMemo(() =>  {\n        return randomChoice([\"💫\", \"🌈\", \"🌱\", \"🏆\", \"📈\", \"💎\", \"💡\", \"🔆\", \"🔔\"]);\n    }, [])\n\n    const renderDoseWindowEditFields = React.useCallback(() => {\n        if (patientData === null) {\n            return null;\n        }\n        const startTime = DateTime.utc(2021, 5, 1, editingDoseWindow.start_hour, editingDoseWindow.start_minute);\n        const endTime = DateTime.utc(2021, 5, 1, editingDoseWindow.end_hour, editingDoseWindow.end_minute);\n        return (\n            <>\n                <Paragraph size=\"small\" margin={{bottom: \"none\"}}>Start time (earliest time you'll be reminded)</Paragraph>\n                <TimeInput value={startTime.setZone('local')} color=\"dark-3\" onChangeTime={\n                    (newTime) => {\n                        const newDwTime = DateTime.local(2021, 5, 1, newTime.hour, newTime.minute).setZone(\"UTC\");\n                        setEditingDoseWindow({...editingDoseWindow, start_hour: newDwTime.hour, start_minute: newDwTime.minute});\n                    }}\n                />\n                <Paragraph size=\"small\" margin={{bottom: \"none\"}}>End time (latest time you'll be reminded)</Paragraph>\n                <TimeInput value={endTime.setZone('local')} color=\"dark-3\" onChangeTime={\n                    (newTime) => {\n                        console.log(`changed time to ${JSON.stringify(newTime)}`)\n                        const newDwTime = DateTime.local(2021, 5, 1, newTime.hour, newTime.minute).setZone(\"UTC\");\n                        setEditingDoseWindow({...editingDoseWindow, end_hour: newDwTime.hour, end_minute: newDwTime.minute});\n                    }}\n                />\n                {<AnimatingButton\n                    onClick={async () => {\n                        setAnimating(true);\n                        console.log(\"set animating\");\n                        await updateDoseWindow(editingDoseWindow);\n                        await loadData();\n                        setEditingDoseWindow(null);\n                        if (impersonateOptions === null) {\n                            trackSubmitEditedDoseWindow(patientData.patientId);\n                        }\n                    }}\n                    label={validDoseWindows ? editingDoseWindow.id ? \"Update\" : \"Create\" : \"Invalid dose window\"}\n                    disabled={!validDoseWindows}\n                    animating={animating}\n                />}\n                {editingDoseWindow.id ? <AnimatingButton onClick={() => {\n                    setDeletingDoseWindow(editingDoseWindow);\n                    if (impersonateOptions === null) {\n                        trackStartDeletingDoseWindow(patientData.patientId);\n                    }\n                }}\n                    disabled={animating}\n                    size=\"small\"\n                    padding={{horizontal: \"none\"}}\n                    margin={{top: \"medium\"}}\n                    label=\"Delete dose window\"\n                    color=\"status-error\"\n                    plain={true}\n                    alignSelf=\"center\"\n                /> : null}\n            </>\n        )\n    }, [animating, editingDoseWindow, impersonateOptions, loadData, patientData, validDoseWindows]);\n\n    if (!cookies.token) {\n        return <Redirect to=\"/welcome\"/>;\n    }\n    if (patientData !== null && [\"payment_method_requested\"].includes(patientData.state)) {\n        return <Redirect to=\"/payment\"/>\n    }\n    if (patientData !== null && [\"intro\", \"dose_windows_requested\", \"dose_window_times_requested\", \"timezone_requested\"].includes(patientData.state)) {\n        return <Redirect to=\"/finishOnboarding\"/>\n    }\n\n    const orderDays = (t1, t2) => {\n        if (t1 === t2) {\n            return 0;\n        }\n        if (t1 === \"morning\" || (t1 === \"afternoon\" && t2 === \"evening\")) {\n            return -1;\n        }\n        return 1;\n    }\n\n    console.log(timeRange.label);\n    return (\n        <Box>\n            {impersonateOptions !== null ?\n                <Box direction=\"row\" align=\"center\" gap=\"small\" pad={{\"horizontal\": \"medium\"}}>\n                    <Paragraph>Impersonating:</Paragraph>\n                    <Select\n                        options={impersonateOptions}\n                        children={renderImpersonateListItem}\n                        onChange={({option}) => {\n                            console.log(\"setting\");\n                            setImpersonating(option);\n                        }}\n                    />\n                </Box> : null}\n            {patientData && patientData.earlyAdopterStatus ? (\n                <Box align=\"center\" background=\"brand\" justify=\"evenly\">\n                    <Box direction=\"row\" justify=\"center\" align=\"center\">\n                        <Paragraph size=\"small\" margin={{right: \"small\"}}>COHERENCE EARLY ADOPTER</Paragraph>\n                        <Fireball/>\n                    </Box>\n                </Box>) : null\n            }\n            <Box align=\"center\">\n                <Heading size=\"small\">Good {currentTimeOfDay}{patientData ? `, ${patientData.patientName}` : \"\"}.</Heading>\n            </Box>\n            { patientData && patientData.state === \"subscription_expired\" ?\n                <Box\n                    align=\"center\"\n                    background={{\"color\":\"status-error\", \"dark\": true}}\n                    round=\"medium\"\n                    margin={{horizontal: \"large\", bottom: \"medium\"}}\n                    pad=\"medium\"\n                >\n                    <Paragraph textAlign=\"center\" margin={{vertical: \"none\"}}>Your subscription expired on {DateTime.fromHTTP(patientData.subscriptionEndDate).toLocaleString(DateTime.DATE_MED)}.</Paragraph>\n                    <Button label=\"Renew subscription\" onClick={() => { history.push(\"/payment\") }} margin={{top: \"small\"}}/>\n                </Box>\n                :\n                null\n            }\n            {timezoneDiscrepancy ?\n                <Box\n                    align=\"center\"\n                    background={{\"color\":\"status-error\", \"dark\": true}}\n                    round=\"medium\"\n                    margin={{horizontal: \"large\", bottom: \"medium\"}}\n                    pad=\"medium\"\n                >\n                    <Paragraph textAlign=\"center\" margin={{vertical: \"none\"}}>Looks like you're in a new timezone.</Paragraph>\n                    <AnimatingButton\n                        label={`Update timezone to ${getCurrentStandardTimezone()}`}\n                        onClick={async () => {\n                            setAnimating(true);\n                            await updateUserTimezone(getCurrentStandardTimezone());\n                            await loadData();\n                        }}\n                        margin={{top: \"small\"}}\n                        animating={animating}\n                    />\n                </Box> : null\n            }\n            <Box>\n                {patientData && patientData.takeNow ?\n                    <Box\n                        align=\"center\"\n                        background={{\"color\":\"status-warning\", \"dark\": true}}\n                        round=\"medium\"\n                        margin={{horizontal: \"large\"}}\n                        pad={{vertical: \"medium\"}}\n                        animation={{\"type\":\"pulse\",\"size\":\"medium\",\"duration\":2000}}\n                    >\n                        <Paragraph alignSelf=\"center\" margin={{vertical: \"none\"}}>Dose to take now!</Paragraph>\n                    </Box>\n                    :\n                    <Box align=\"center\" background={{\"color\":\"brand\", \"dark\": true}} round=\"medium\" margin={{horizontal: \"large\"}}>\n                        <Paragraph>No doses to take right now. {randomHeaderEmoji}</Paragraph>\n                    </Box>\n                }\n            </Box>\n            <Box margin={{vertical: \"medium\"}} pad={{horizontal: \"large\"}}>\n                <DropButton\n                    icon={<CircleInformation/>}\n                    label=\"How do I use Coherence?\"\n                    dropContent={\n                        <Box pad={{horizontal: \"small\", vertical: \"small\"}}>\n                            <Anchor label=\"Video guide\" href=\"https://youtu.be/2kH0-IE1QvU\" alignSelf=\"center\" icon={<CirclePlay />}/>\n                            <Paragraph textAlign=\"center\">Texting commands</Paragraph>\n                            <Grid columns={[\"xsmall\", \"small\"]} align=\"center\" justifyContent=\"center\" gap={{column: \"small\"}}>\n                                <Paragraph size=\"small\">T, taken</Paragraph>\n                                <Paragraph size=\"small\">Mark your medication as taken at the current time</Paragraph>\n                                <Paragraph size=\"small\">T @ 5:00pm</Paragraph>\n                                <Paragraph size=\"small\">Mark your medication as taken at 5pm</Paragraph>\n                                <Paragraph size=\"small\">S, skip</Paragraph>\n                                <Paragraph size=\"small\">Skip the current dose</Paragraph>\n                                <Paragraph size=\"small\">1</Paragraph>\n                                <Paragraph size=\"small\">Delay the reminder by ten minutes</Paragraph>\n                                <Paragraph size=\"small\">2</Paragraph>\n                                <Paragraph size=\"small\">Delay the reminder by half an hour</Paragraph>\n                                <Paragraph size=\"small\">3</Paragraph>\n                                <Paragraph size=\"small\">Delay the reminder by an hour</Paragraph>\n                                <Paragraph size=\"small\">20, 20 min</Paragraph>\n                                <Paragraph size=\"small\">Delay the reminder by 20 minutes</Paragraph>\n                                <Paragraph size=\"small\">glucose:140, 140 mg/dL</Paragraph>\n                                <Paragraph size=\"small\">Record glucose reading</Paragraph>\n                                <Paragraph size=\"small\">weight:150, 150 pounds, 150 lb</Paragraph>\n                                <Paragraph size=\"small\">Record weight reading</Paragraph>\n                                <Paragraph size=\"small\">120/80, 120 80</Paragraph>\n                                <Paragraph size=\"small\">Record blood pressure reading</Paragraph>\n                                <Paragraph size=\"small\">W, website, site</Paragraph>\n                                <Paragraph size=\"small\">Get the website link sent to you</Paragraph>\n                                <Paragraph size=\"small\">Eating, going for a walk</Paragraph>\n                                <Paragraph size=\"small\">Tell Coherence you're busy with an activity</Paragraph>\n                                <Paragraph size=\"small\">X</Paragraph>\n                                <Paragraph size=\"small\">Report an error</Paragraph>\n                            </Grid>\n                        </Box>\n                    }\n                    dropAlign={{ top: 'bottom' }}\n                />\n            </Box>\n            <Box pad=\"medium\" background={{color: \"light-3\"}}>\n                <Paragraph textAlign=\"center\" margin={{vertical: \"none\"}} fill={true}>Medication history</Paragraph>\n                <Calendar\n                    date={dateToDisplay.toISO()}\n                    fill={true}\n                    onSelect={(date) => {\n                        const dt = DateTime.fromISO(date);\n                        setSelectedDay(dt.day);\n                        if (impersonateOptions === null) {\n                            trackViewedDayDetails(patientData.patientId);\n                        }\n                    }}\n                    showAdjacentDays={false}\n                    bounds={dateRange.map((date) => {return date.toString()})}\n                    children={renderDay}\n                    daysOfWeek={true}\n                    onReference={(date) => {\n                        setCalendarMonth(DateTime.fromISO(date).month);\n                        setPatientData({...patientData, eventData: []}); // hide event data while we load\n                    }}\n                    animate={false}\n                />\n            </Box>\n            {selectedDay && (\n                <Layer\n                    onEsc={() => setSelectedDay(false)}\n                    onClickOutside={() => setSelectedDay(false)}\n                    responsive={false}\n                >\n                    <Box width=\"70vw\" pad=\"large\">\n                        <Box direction=\"row\" justify=\"between\">\n                            <Paragraph size=\"large\">{DateTime.local().set({month: calendarMonth}).monthLong} {selectedDay}</Paragraph>\n                            <Button icon={<Close />} onClick={() => setSelectedDay(false)} />\n                        </Box>\n                        {\n                            patientData.eventData[selectedDay - 1].day_status ?\n                            Object.keys(patientData.eventData[selectedDay - 1].time_of_day).sort(orderDays).map((key) => {\n                                let numberSuffix = patientData.eventData[selectedDay - 1].time_of_day[key].length > 1;  // handle multiple dose windows in the same time of day\n                                return (\n                                    patientData.eventData[selectedDay - 1].time_of_day[key].map((event, index) => {\n                                        return (\n                                            <>\n                                                <Paragraph key={`tod-${key}`} margin={{bottom: \"none\"}}>{key} dose{numberSuffix ? ` ${index + 1}` : ''}</Paragraph>\n                                                <Box key={`todStatusContainer-${key}`} pad={{left: \"medium\"}} direction=\"row\" align=\"center\" justify=\"between\">\n                                                    <Paragraph key={`todStatus-${key}`} size=\"small\">\n                                                        {event.type}{event.time ? ` at ${DateTime.fromJSDate(new Date(event.time)).toLocaleString(DateTime.TIME_SIMPLE)}` : ''}\n                                                    </Paragraph>\n                                                    {event.type === \"taken\" ? <Checkmark color=\"status-ok\" size=\"small\"/> : null}\n                                                    {event.type === \"skipped\" ? <Clear color=\"status-warning\" size=\"small\"/> : null}\n                                                    {event.type === \"missed\" ? <Close color=\"status-error\" size=\"small\"/> : null}\n                                                </Box>\n                                            </>\n                                        )\n                                    })\n                                )\n                            }) :\n                            <Paragraph>No data for this day.</Paragraph>\n                        }\n                    </Box>\n                </Layer>\n            )}\n            <Box align=\"center\" background=\"brand\" pad={{bottom: \"large\"}}>\n                <Paragraph margin={{bottom: \"none\"}}>Health tracking</Paragraph>\n                {Object.keys(formattedHealthMetricData).length === 0 ?\n                    <>\n                        <Paragraph size=\"small\">You're not tracking any health metrics yet.</Paragraph>\n                        <Paragraph size=\"small\" textAlign=\"center\">Tracking is a brand new feature that allows you to text us health data such as blood pressure, weight, or glucose. You can then view your historical data here at any time.</Paragraph>\n                    </>\n                : null}\n                {Object.keys(formattedHealthMetricData).length !== 0 ?\n                <Box margin={{top: \"small\"}}>\n                    <Select\n                        options={[{label: \"week\", value: 7}, {label: \"month\", value: 30}, {label: \"3 months\", value: 90}, {label: \"year\", value: 365}, {label: \"all time\", value: null}]}\n                        children={(option) => {return <Paragraph margin=\"small\">{option.label}</Paragraph>}}\n                        onChange={({value}) => { setTimeRange(value)}}\n                        valueLabel={<Paragraph margin={{vertical: \"xsmall\", horizontal: \"small\"}}>{timeRange.label}</Paragraph>}\n                        // labelKey=\"label\"\n                    />\n                </Box> : null}\n                {formattedHealthMetricData && \"blood pressure\" in formattedHealthMetricData ? (\n                    <Box pad={{horizontal: \"large\"}} fill=\"horizontal\">\n                        <Paragraph size=\"small\" margin={{bottom: \"none\"}}>Blood pressure</Paragraph>\n                        {formattedHealthMetricData[\"blood pressure\"].datasets[0].data.length > 0 ?\n                            <Scatter data={{datasets: formattedHealthMetricData[\"blood pressure\"].datasets}} options={formattedHealthMetricData[\"blood pressure\"].options}/> :\n                            <Paragraph alignSelf=\"center\" size=\"small\">No blood pressure data recorded yet. Example texts you can send: \"120/80\", \"120 80\".</Paragraph>\n                        }\n                    </Box>) : null}\n                {formattedHealthMetricData && \"weight\" in formattedHealthMetricData ?\n                    <Box pad={{horizontal: \"large\"}} fill=\"horizontal\">\n                        <Paragraph size=\"small\" margin={{bottom: \"none\"}}>Weight</Paragraph>\n                        {formattedHealthMetricData.weight.datasets[0].data.length > 0 ?\n                        <Scatter data={{datasets: formattedHealthMetricData.weight.datasets}} options={formattedHealthMetricData.weight.options}/> :\n                        <Paragraph alignSelf=\"center\" size=\"small\">No weight data recorded yet. Example texts you can send: \"weight:150\", \"150 lb\", \"150 pounds\".</Paragraph>}\n                    </Box>\n                    : null}\n                {formattedHealthMetricData && \"glucose\" in formattedHealthMetricData ?\n                    <Box pad={{horizontal: \"large\"}} fill=\"horizontal\">\n                        <Paragraph size=\"small\" margin={{bottom: \"none\"}}>Glucose</Paragraph>\n                        {formattedHealthMetricData.glucose.datasets[0].data.length > 0 ?\n                        <Scatter data={{datasets: formattedHealthMetricData.glucose.datasets}} options={formattedHealthMetricData.glucose.options}/> :\n                        <Paragraph alignSelf=\"center\" size=\"small\">No glucose data recorded yet. Example texts you can send: \"glucose:140\", \"140 mg/dL\"</Paragraph>}\n                    </Box>\n                    : null}\n                <Button label={Object.keys(formattedHealthMetricData).length === 0 ? \"Start tracking\": \"Edit tracking\"} onClick={() => {\n                    setEditingHealthTracking(Object.keys(formattedHealthMetricData));\n                    if (impersonateOptions === null) {\n                        trackStartEditingHealthMetrics(patientData.patientId);\n                    }\n                }} margin={{top: \"medium\"}}/>\n            </Box>\n            {editingHealthTracking !== null ?\n                <Layer\n                    onEsc={() => setEditingHealthTracking(null)}\n                    onClickOutside={() => setEditingHealthTracking(null)}\n                    responsive={false}\n                >\n                    <Box width=\"70vw\" pad=\"large\">\n                        <Box direction=\"row\" justify=\"between\">\n                            <Paragraph size=\"large\">Choose what you want to track</Paragraph>\n                            <Button icon={<Close />} onClick={() => setEditingHealthTracking(null)} />\n                        </Box>\n                        <CheckBoxGroup\n                            options={[\"blood pressure\", \"weight\", \"glucose\"]}\n                            value={editingHealthTracking}\n                            onChange={(e) => {setEditingHealthTracking(e.value)}}\n                        />\n                        <AnimatingButton animating={animating} label=\"Save changes\" margin={{top:\"medium\"}} onClick={async () => {\n                            setAnimating(true);\n                            console.log(editingHealthTracking);\n                            await setHealthMetricsTracking(editingHealthTracking);\n                            await loadData();\n                            setEditingHealthTracking(null);\n                            if (impersonateOptions === null) {\n                                trackSubmitEditingHealthMetrics(patientData.patientId);\n                            }\n                        }}/>\n                    </Box>\n                </Layer> : null\n            }\n            <Box align=\"center\" pad={{vertical: \"medium\"}} margin={{horizontal: \"xlarge\"}} border=\"bottom\">\n                <Paragraph textAlign=\"center\" margin={{vertical: \"none\"}}>Dose windows</Paragraph>\n                    {\n                        patientData ? patientData.doseWindows.map((dw) => {\n                            const startTime = DateTime.utc(2021, 5, 1, dw.start_hour, dw.start_minute);\n                            const endTime = DateTime.utc(2021, 5, 1, dw.end_hour, dw.end_minute);\n                            return (\n                                <Grid key={`doseWindowContainer-${dw.id}`} columns={[\"small\", \"flex\", \"flex\"]} align=\"center\" pad={{horizontal: \"large\"}} alignContent=\"center\" justifyContent=\"center\" justify=\"center\">\n                                    <Box direction=\"row\" align=\"center\">\n                                        <Paragraph>{startTime.setZone('local').toLocaleString(DateTime.TIME_SIMPLE)}</Paragraph>\n                                        <FormNextLink/>\n                                        <Paragraph>{endTime.setZone('local').toLocaleString(DateTime.TIME_SIMPLE)}</Paragraph>\n                                    </Box>\n                                    <Button label=\"edit\" onClick={() => {\n                                        setEditingDoseWindow(dw);\n                                        if (impersonateOptions === null) {\n                                            trackStartEditingDoseWindow(patientData.patientId);\n                                        }\n                                    }} size=\"small\" margin={{horizontal: \"none\"}}/>\n                                </Grid>\n                            )\n                        }) : null\n                    }\n                    <Button label=\"Add dose window\" onClick={() => {\n                        setEditingDoseWindow({start_hour: 0, start_minute:0, end_hour: 0, end_minute: 0});\n                        if (impersonateOptions === null) {\n                            trackStartAddingDoseWindow(patientData.patientId);\n                        }\n                    }} icon={<Add/>}/>\n            </Box>\n            {editingDoseWindow && (\n                <Layer\n                    onEsc={() => setEditingDoseWindow(null)}\n                    onClickOutside={() => setEditingDoseWindow(null)}\n                    responsive={false}\n                >\n                    <Box width=\"90vw\" pad=\"large\">\n                        <Box direction=\"row\" justify=\"between\">\n                            <Paragraph size=\"large\">Edit dose window</Paragraph>\n                            <Button icon={<Close />} onClick={() => setEditingDoseWindow(null)} />\n                        </Box>\n                        <Box>\n                            {renderDoseWindowEditFields(editingDoseWindow)}\n                        </Box>\n                    </Box>\n                </Layer>\n            )}\n            {deletingDoseWindow && (\n                <Layer\n                    onEsc={() => setDeletingDoseWindow(null)}\n                    onClickOutside={() => setDeletingDoseWindow(null)}\n                    responsive={false}\n                >\n                    <Box width=\"90vw\" pad=\"large\">\n                        <Box direction=\"row\" justify=\"between\">\n                            <Paragraph size=\"large\">Confirm delete dose window</Paragraph>\n                            <Button icon={<Close />} onClick={() => setDeletingDoseWindow(null)}/>\n                        </Box>\n                        <Box align=\"center\">\n                            <Paragraph margin={{bottom: \"none\"}}>You're about to delete the dose window</Paragraph>\n                            <Box direction=\"row\" align=\"center\" margin={{bottom: \"medium\"}}>\n                                <Paragraph>{DateTime.utc(2021, 5, 1, deletingDoseWindow.start_hour, deletingDoseWindow.start_minute).setZone('local').toLocaleString(DateTime.TIME_SIMPLE)}</Paragraph>\n                                <FormNextLink/>\n                                <Paragraph>{DateTime.utc(2021, 5, 1, deletingDoseWindow.end_hour, deletingDoseWindow.end_minute).setZone('local').toLocaleString(DateTime.TIME_SIMPLE)}</Paragraph>\n                            </Box>\n                            <AnimatingButton onClick={async () => {\n                                setAnimating(true);\n                                await deleteDoseWindow(deletingDoseWindow.id)\n                                await loadData();\n                                setDeletingDoseWindow(null);\n                                setEditingDoseWindow(null);\n                                if (impersonateOptions === null) {\n                                    trackSubmitDeletingDoseWindow(patientData.patientId);\n                                }\n                            }} label=\"Confirm\" animating={animating}/>\n                        </Box>\n                    </Box>\n                </Layer>\n            )}\n            <Box align=\"center\" pad={{vertical: \"medium\"}}>\n                {patientData ?\n                <>\n                    <Paragraph textAlign=\"center\" margin={{vertical: \"none\"}}>Pause / resume Coherence</Paragraph>\n                    <Paragraph size=\"small\" color=\"dark-3\">Coherence is currently {patientData.pausedService ? \"paused\" : \"active\"}.</Paragraph>\n                    <AnimatingButton\n                        background={patientData.pausedService ? {\"dark\": true} : null}\n                        animating={animating}\n                        style={{padding: \"10px\"}}\n                        primary={patientData.pausedService}\n                        onClick={async () => {\n                            setAnimating(true);\n                            if (patientData.pausedService) {\n                                await resumeUser();\n                                if (impersonateOptions === null) {\n                                    trackResumedService(patientData.patientId);\n                                }\n                            } else {\n                                await pauseUser();\n                                if (impersonateOptions === null) {\n                                    trackPausedService(patientData.patientId);\n                                }\n                            }\n                            loadData();\n                        }} label={`${patientData.pausedService ? \"Resume\" : \"Pause\"} Coherence`}\n                        disabled={patientData.state === \"subscription_expired\"}\n                    />\n                    {patientData.pausedService ? <Paragraph size=\"small\" color=\"status-warning\" textAlign=\"center\">While Coherence is paused, we can't respond to any texts you send us, or remind you about your medications.</Paragraph> : null}\n                </> : null}\n            </Box>\n            <Box align=\"center\" pad={{vertical: \"medium\"}} margin={{horizontal: \"xlarge\"}} border=\"top\">\n                <Paragraph textAlign=\"center\" margin={{vertical: \"none\"}}>Need help with anything?</Paragraph>\n                <Paragraph size=\"small\" color=\"dark-3\">Our customer service is just a text away at (650) 667-1146. Reach out any time and we'll get back to you in a few hours!</Paragraph>\n            </Box>\n            <Box align=\"center\" alignSelf=\"center\" pad={{vertical: \"medium\"}} margin={{horizontal: \"xlarge\"}} border=\"top\" direction=\"row\">\n                {/* {patientData && !patientData.earlyAdopterStatus ? <Button onClick={() => {history.push(\"/payment\")}} label=\"Manage subscription\" size=\"small\"/> : null} */}\n                <Button label=\"Settings\" icon={<UserSettings />} size=\"small\" href=\"/settings\"/>\n                <Button onClick={logout} label=\"Logout\" size=\"small\" icon={<Logout />}/>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport { login } from \"../api\";\nimport { useCookies } from 'react-cookie';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Box, Paragraph, Heading, Button, TextInput, Anchor } from \"grommet\";\nimport { Phone, Login, Fireball, Lock, FormPreviousLink } from \"grommet-icons\";\n\nconst Intro = () => {\n    const history = useHistory();\n    const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n    const [secretCode, setSecretCode] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = React.useState(\"\");\n    const [componentToDisplay, setComponentToDisplay] = React.useState(\"phoneNumber\");\n    const [cookies, setCookie] = useCookies([\"token\"]);\n    const [authError, setAuthError] = React.useState(false);\n    const submitAll = React.useCallback(async () => {\n        const response = await login(phoneNumber, secretCode, password);\n        if (response === null) {\n            setAuthError(true);\n        } else {\n            if (response.status === \"success\") {\n                console.log(`setting cookie to ${response.token}`);\n                setCookie(\"token\", response.token);\n                if (response.state === \"payment_method_requested\") {\n                    history.push(\"/payment\");\n                }\n            }\n            console.log(response);\n            console.log(response.status);\n            setComponentToDisplay(response.status);\n            setAuthError(false);\n        }\n    }, [history, password, phoneNumber, secretCode, setCookie])\n    const getInputField = React.useCallback(() => {\n        if (componentToDisplay === \"phoneNumber\") {\n            return <>\n                <Paragraph textAlign=\"center\" size=\"small\">Enter phone number.</Paragraph>\n                <TextInput\n                    icon={<Phone/>}\n                    placeholder=\"(555) 555-5555\"\n                    size=\"small\"\n                    value={phoneNumber}\n                    onChange={(event) => {setPhoneNumber(event.target.value)}}\n                />\n                {authError ? <Paragraph size=\"small\">Invalid phone number.</Paragraph> : null}\n            </>\n        } else if (componentToDisplay === \"2fa\") {\n            return <>\n                <Paragraph textAlign=\"center\" size=\"small\">We've texted you a secret code, enter it below.</Paragraph>\n                <TextInput\n                    icon={<Fireball />}\n                    placeholder=\"123456\"\n                    size=\"small\"\n                    value={secretCode}\n                    onChange={(event) => {setSecretCode(event.target.value)}}\n                />\n                {authError ? <Paragraph size=\"small\">Invalid secret code.</Paragraph> : null}\n            </>\n        } else if (componentToDisplay === \"password\") {\n            return <>\n                <Paragraph textAlign=\"center\" size=\"small\">Enter password.</Paragraph>\n                <TextInput\n                    icon={<Lock />}\n                    placeholder=\"•••••••••\"\n                    size=\"small\"\n                    value={password}\n                    onChange={(event) => {\n                        setPassword(event.target.value);\n                        setPasswordConfirm(event.target.value);\n                    }}\n                    type=\"password\"\n                />\n                {authError ? <Paragraph size=\"small\">Invalid password. If you'd like us to reset it, give us a text at (650) 667-1146.</Paragraph> : null}\n            </>\n        } else if (componentToDisplay === \"register\") {\n            return <>\n                <Paragraph textAlign=\"center\" size=\"small\">Create your password.</Paragraph>\n                <TextInput\n                    icon={<Lock />}\n                    placeholder=\"Enter password\"\n                    size=\"small\"\n                    value={password}\n                    onChange={(event) => {setPassword(event.target.value)}}\n                    type=\"password\"\n                />\n                <TextInput\n                    icon={<Lock />}\n                    placeholder=\"Type it again\"\n                    size=\"small\"\n                    value={passwordConfirm}\n                    onChange={(event) => {setPasswordConfirm(event.target.value)}}\n                    type=\"password\"\n                />\n                {password !== passwordConfirm ? <Paragraph size=\"small\">Passwords don't match.</Paragraph> : null}\n            </>\n        }\n    }, [authError, componentToDisplay, password, passwordConfirm, phoneNumber, secretCode])\n    if (cookies.token) {\n        return <Redirect to=\"/\"/>;\n    }\n    return (\n        <Box height=\"100vh\" flex=\"grow\" background={{\"position\":\"center\",\"dark\":false,\"opacity\":\"strong\"}}>\n            <Box align=\"start\" margin=\"small\">\n                <Button label=\"back to homepage\" icon={<FormPreviousLink />} size=\"small\" href=\"/welcome\"/>\n            </Box>\n            <Box flex={{grow: 1}} align=\"center\" justify=\"center\" pad=\"large\">\n                <Paragraph>login to</Paragraph>\n                <Heading margin={{vertical: \"small\"}}>coherence</Heading>\n            </Box>\n            <Box flex={{grow: 4}} align=\"center\" justify=\"between\" background={{color: \"brand\", dark: true}} pad=\"large\">\n                <Paragraph color=\"white\" textAlign=\"center\">Peace of mind with your medications is just around the corner.</Paragraph>\n                <Box align=\"center\">\n                    <Box width=\"200px\" margin={{bottom: \"medium\", top: \"xsmall\"}}>\n                        {getInputField()}\n                    </Box>\n                    <Box margin={{vertical: \"xsmall\"}} align=\"center\">\n                        <Button label=\"submit\" icon={<Login/>} onClick={submitAll} disabled={password !== passwordConfirm}/>\n                        <Paragraph size=\"small\" margin={{bottom: \"none\", top: \"medium\"}}>Haven't gotten a text from us yet?</Paragraph>\n                        <Anchor label=\"Sign up\" href=\"/welcome#signup\"/>\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Intro;","import React from \"react\";\nimport {\n    CardElement,\n    useStripe,\n    useElements,\n  } from '@stripe/react-stripe-js';\nimport AnimatingButton from \"../components/AnimatingButton\";\nimport { Box, Paragraph, Spinner } from \"grommet\";\nimport { submitPaymentInfo } from \"../api\";\n\nconst StripeCardEntry = ({ submitText, clientSecret, afterSubmitAction, payOnSubmit }) => {\n    console.log(payOnSubmit);\n    const stripe = useStripe();\n    const elements = useElements();\n    const [validatingCard, setValidatingCard] = React.useState(false);\n    const [ready, setReady] = React.useState(false);\n    const [formFilled, setFormFilled] = React.useState(false);\n\n    // Use card Element to tokenize payment details\n    const submitPayment = React.useCallback(async () => {\n        const cardElement = elements.getElement(CardElement);\n        setValidatingCard(true);\n        let stripeReturnData = null;\n        if (payOnSubmit) {\n            console.log(\"in here\")\n            stripeReturnData = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: cardElement,\n                    billing_details: {\n                        name: \"Peter Lu\"\n                    },\n                },\n                setup_future_usage: \"off_session\"  // allows us to charge card while not in checkout flow\n            });\n        }\n        else {\n            console.log(\"calling confirm card setup\")\n            stripeReturnData = await stripe.confirmCardSetup(clientSecret, {\n                payment_method: {\n                    card: cardElement,\n                    billing_details: {\n                        name: \"Peter Lu\"\n                    },\n                },\n                // setup_future_usage: \"off_session\"  // allows us to charge card while not in checkout flow\n            });\n        }\n        setValidatingCard(false);\n        console.log(stripeReturnData);\n    }, [clientSecret, elements, payOnSubmit, stripe])\n\n    if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        return <Spinner />;\n    }\n\n    return (\n        <>\n            <CardElement onReady={() => {setReady(true)}} onChange={(event) => {\n                if (event.complete && !event.error) {\n                    setFormFilled(true);\n                } else {\n                    setFormFilled(false);\n                }\n            }}/>\n            <Box margin={{top: \"medium\"}}>\n                {ready ? <>\n                    <AnimatingButton\n                        label={submitText ? submitText : \"Save payment information\"}\n                        onClick={async () => {\n                            await submitPaymentInfo(); // submits to our backend\n                            await submitPayment();  // submits to stripe\n                            afterSubmitAction();  // any reloading that needs to be done after submitting payment info\n                        }}\n                        animating={validatingCard}\n                        primary={true}\n                        disabled={!formFilled}\n                    />\n                    {validatingCard ? <Paragraph>Submitting your payment information. Please do not close this window.</Paragraph> : null}\n                    </> : <Spinner />\n                }\n            </Box>\n        </>\n    )\n}\n\nexport default StripeCardEntry;","import React from \"react\";\nimport { Box, Button, Heading, Layer, Paragraph, Spinner } from \"grommet\";\nimport { cancelSubscription, pullPatientPaymentData, renewSubscription, submitPaymentInfo } from \"../api\";\nimport { useCookies } from 'react-cookie';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { DateTime } from \"luxon\";\nimport { Elements } from '@stripe/react-stripe-js';\n\nimport {loadStripe} from '@stripe/stripe-js';\n\nimport StripeCardEntry from \"../components/StripeCardEntry\";\nimport { Close, Home, FormPreviousLink } from \"grommet-icons\";\nimport AnimatingButton from \"../components/AnimatingButton\";\n\nconst Payment = () => {\n    const location = useLocation();  //  HACK: fix after launch\n      // Initialize an instance of stripe.\n    const [loading, setLoading] = React.useState(true);\n    const [animating, setAnimating] = React.useState(false);\n    const [paymentData, setPaymentData] = React.useState(null);\n    const [addCardModalVisible, setAddCardModalVisible] = React.useState(false);\n    const [payWithCardModalVisible, setPayWithCardModalVisible] = React.useState(false);\n    const [cancelModalVisible, setCancelModalVisible] = React.useState(false);\n    const [_, __, removeCookie] = useCookies(['token']);\n    const history = useHistory();\n    const loadData = React.useCallback(async () => {\n        setLoading(true);\n        let loadedData = await pullPatientPaymentData();\n        if (loadedData === null) {\n            removeCookie(\"token\");\n            history.push(\"/welcome\");\n        }\n        console.log(loadedData.state);\n        if ([\"intro\", \"dose_windows_requested\", \"dose_window_times_requested\", \"timezone_requested\"].includes(loadedData.state)) {\n            history.push(\"/finishOnboarding\");\n        } else if (loadedData.state !== \"payment_method_requested\" && location.pathname === \"/payment\") {\n            history.push(\"/\");\n        }\n        setPaymentData(loadedData);\n        setLoading(false);\n        setAnimating(false);\n    }, [history, location.pathname, removeCookie]);\n\n    const stripePromise = React.useMemo(() => {\n        return paymentData !== null ? loadStripe(paymentData.publishable_key) : null;\n    }, [paymentData]);\n\n    React.useEffect(() => {\n        if (loading) {\n            loadData();\n        }\n    }, [loadData, loading]);\n\n    if (loading) {\n        return <Spinner />\n    }\n    if (paymentData.secondary_state === \"payment_verification_pending\") {\n        return (\n            <Box margin=\"large\">\n                {location.pathname === \"/payment\" ?\n                    <Box align=\"start\">\n                        <Button\n                            icon={<Box direction=\"row\"><FormPreviousLink/><Home/></Box>}\n                            label=\" \"\n                            size=\"small\"\n                            onClick={() => {history.push(\"/\")}}\n                        />\n                    </Box> : null\n                }\n                <Paragraph textAlign=\"center\">We're verifying your payment information. You'll get a text when you're verified with further instructions. Thanks for your patience!</Paragraph>\n            </Box>\n        )\n    } else if (paymentData.state === 'payment_method_requested') {\n        return (\n            <Elements stripe={stripePromise}>\n                <Box margin=\"large\">\n                    <Heading size=\"small\">Enter payment information</Heading>\n                    <Paragraph>Looking forward to helping you with your medication. If you have any questions before signing up, please reach out to us over text at (650) 667-1146.</Paragraph>\n                    <Paragraph size=\"small\">Please enter your credit card information below to continue. If you are asked for a CVC code, it is usually a 3 digit number on the back of your credit card.</Paragraph>\n                    <StripeCardEntry\n                        submitText=\"Start Coherence subscription ($6.99)\"\n                        clientSecret={paymentData.client_secret}\n                        afterSubmitAction={loadData}\n                        payOnSubmit={true}\n                    />\n                </Box>\n            </Elements>\n        );\n    } else if ([\"paused\", \"active\", \"subscription_expired\"].includes(paymentData.state)) {\n        return (\n                <Box margin=\"large\">\n                    {paymentData.state === \"subscription_expired\" ? (\n                        <>\n                            <Paragraph alignSelf=\"center\">Your subscription expired on {DateTime.fromHTTP(paymentData.subscription_end_date).toLocaleString(DateTime.DATE_MED)}.</Paragraph>\n                            {paymentData.payment_method ? (\n                                <AnimatingButton\n                                    label=\"Renew for $6.99\"\n                                    onClick={async () => {\n                                        setAnimating(true);\n                                        console.log(\"attempting to renew subscription\");\n                                        await submitPaymentInfo();\n                                        await renewSubscription();\n                                        setLoading(true);\n                                    }}\n                                    animating={animating}\n                                    primary={true}\n                                />\n                            ) : (\n                                <>\n                                    <Button\n                                        label=\"Renew for $6.99\"\n                                        onClick={() => {setPayWithCardModalVisible(true)}}\n                                        primary={true}\n                                    />\n                                    {payWithCardModalVisible ? (\n                                        <Layer\n                                            responsive={false}\n                                            onEsc={() => setPayWithCardModalVisible(false)}\n                                            onClickOutside={() => setPayWithCardModalVisible(false)}\n                                            animation={false}\n                                        >\n                                            <Box width=\"90vw\" pad=\"large\">\n                                                <Box direction=\"row\" justify=\"between\">\n                                                    <Paragraph size=\"large\">Enter credit card information</Paragraph>\n                                                    <Button icon={<Close />} onClick={() => setPayWithCardModalVisible(false)}/>\n                                                </Box>\n                                                <Paragraph size=\"small\">Please enter your credit card information below to continue. If you are asked for a CVC code, it is usually a 3 digit number on the back of your credit card.</Paragraph>\n                                                <Elements stripe={stripePromise}>\n                                                    <StripeCardEntry\n                                                        submitText=\"Start Coherence subscription ($6.99)\"\n                                                        clientSecret={paymentData.client_secret}\n                                                        afterSubmitAction={loadData}\n                                                        payOnSubmit={true}\n                                                    />\n                                                </Elements>\n                                            </Box>\n                                        </Layer>\n                                    ) : null}\n                                </>\n                            )}\n                        </>\n                    ) : paymentData.payment_method ? (\n                        <>\n                            <Paragraph alignSelf=\"center\">Your subscription will be automatically renewed on {DateTime.fromHTTP(paymentData.subscription_end_date).toLocaleString(DateTime.DATE_MED)}.</Paragraph>\n                            <Paragraph alignSelf=\"center\">Payment data on file: {paymentData.payment_method.brand} ending in {paymentData.payment_method.last4}</Paragraph>\n                        </>\n                    ): (\n                        <>\n                            <Paragraph alignSelf=\"center\">Your free trial will end on {DateTime.fromHTTP(paymentData.subscription_end_date).toLocaleString(DateTime.DATE_MED)}.</Paragraph>\n                            <Button label=\"Enter payment information\" onClick={() => {setAddCardModalVisible(true)}}/>\n                            {addCardModalVisible ? (\n                                <Layer\n                                    responsive={false}\n                                    onEsc={() => setAddCardModalVisible(false)}\n                                    onClickOutside={() => setAddCardModalVisible(false)}\n                                    animation={false}\n                                >\n                                    <Box width=\"90vw\" pad=\"large\">\n                                        <Box direction=\"row\" justify=\"between\">\n                                            <Paragraph size=\"large\">Enter credit card information</Paragraph>\n                                            <Button icon={<Close />} onClick={() => setAddCardModalVisible(false)}/>\n                                        </Box>\n                                        <Paragraph size=\"small\">Please enter your credit card information below to continue. If you are asked for a CVC code, it is usually a 3 digit number on the back of your credit card.</Paragraph>\n                                        <Elements stripe={stripePromise}>\n                                            <StripeCardEntry\n                                                submitText={`Add card (will be charged on ${DateTime.fromHTTP(paymentData.subscription_end_date).toLocaleString(DateTime.DATE_MED)}.)`}\n                                                clientSecret={paymentData.client_secret}\n                                                afterSubmitAction={async () => {\n                                                    await loadData();\n                                                    setAddCardModalVisible(false);\n                                                }}\n                                                payOnSubmit={false}\n                                            />\n                                        </Elements>\n                                    </Box>\n                                </Layer>\n                            ) : null}\n                        </>\n                    )\n                    }\n                    <Box align=\"center\">\n                        {\n                            <AnimatingButton\n                                label={paymentData.payment_method ? \"Cancel subscription\" : \"Stop free trial\"}\n                                margin={{vertical: \"small\"}}\n                                onClick={() => {setCancelModalVisible(true)}}\n                                animating={animating}\n                                disabled={paymentData.state === \"subscription_expired\"}\n                                color=\"status-error\"\n                            />\n                        }\n                    </Box>\n                    {cancelModalVisible ? (\n                        <Layer\n                            responsive={false}\n                            onEsc={() => setCancelModalVisible(false)}\n                            onClickOutside={() => setCancelModalVisible(false)}\n                            animation={false}\n                        >\n                            <Box width=\"90vw\" pad=\"large\">\n                                <Box direction=\"row\" justify=\"between\">\n                                    <Paragraph size=\"large\">Subscription cancellation</Paragraph>\n                                    <Button icon={<Close />} onClick={() => setCancelModalVisible(false)}/>\n                                </Box>\n                                <Box>\n                                    <Paragraph>Are you sure you want to cancel your subscription?</Paragraph>\n                                    <Box justify=\"between\" direction=\"row\">\n                                        <Button\n                                            label=\"Go back\"\n                                            onClick={() => setCancelModalVisible(false)}\n                                            icon={<FormPreviousLink />}\n                                            size=\"small\"\n                                        />\n                                        <AnimatingButton\n                                            label=\"Cancel\"\n                                            onClick={async () => {\n                                                setAnimating(true);\n                                                await cancelSubscription();\n                                                setLoading(true);\n                                            }}\n                                            color=\"status-error\"\n                                            icon={<Close/>}\n                                            size=\"small\"\n                                            animating={animating}\n                                        />\n                                    </Box>\n                                </Box>\n                                    {/* <Paragraph>stripe element</Paragraph> */}\n                            </Box>\n                        </Layer>\n                    ) : null}\n                </Box>\n\n        );\n    };\n}\n\nexport default Payment;","import React from \"react\";\n\nimport { Paragraph } from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getPatientState } from \"../api\";\n\nconst FinishOnboarding = () => {\n    const history = useHistory();\n    React.useEffect(() => {\n        const loadState = async () => {\n            const stateData = await getPatientState();\n            if (stateData === null) {\n                history.push(\"/welcome\");\n            } else if ([\"active\", \"paused\", \"subscription_expired\"].includes(stateData.state)) {\n                history.push(\"/\");\n            } else if ([\"payment_method_requested\"].includes(stateData.state)) {\n                history.push(\"/payment\");\n            }\n        }\n        loadState();\n    }, [history]);\n    return <Paragraph>Hello there! Be sure to enter your information over text before continuing here. Thanks!</Paragraph>\n}\n\nexport default FinishOnboarding;","import { Anchor, Box, Button, Heading, Image, Paragraph, TextInput } from \"grommet\";\nimport { Clear, Favorite, Info, Star } from \"grommet-icons\";\nimport React from \"react\";\nimport { landingPageSignup } from \"../api\";\nimport AnimatingButton from \"../components/AnimatingButton\";\nimport { useHistory } from \"react-router-dom\"\n\nconst heading_copy_1 = \"Peace of mind with your medication.\";\nconst heading_copy_2 = \"Your personal medication companion is here at last. No more struggling with annoying alarms. No more wondering whether you've taken a dose or not.\";\nconst heading_copy_3 = \"Sign up today!\";\n\nconst differentiator_copy_1 = \"Here's what makes us different.\";\nconst differentiator_copy_2 = \"Collaborative\";\nconst differentiator_copy_3 = \"No apps needed\";\nconst differentiator_copy_4 = \"Personalized\";\nconst differentiator_copy_5 = \"Coherence works with you to remind you when it's most convenient for you.\";\nconst differentiator_copy_6 = \"Coherence will text you at your phone number, no downloads needed.\";\nconst differentiator_copy_7 = \"Coherence learns about your habits over time and tailors its texting frequency and style around your preferences.\";\n\nconst feature_copy_1 = \"More than just a reminder.\";\n\nconst reviews_copy_1 = \"See what others are saying.\";\nconst reviews_copy_2 = \"Cheryl\";\nconst reviews_copy_3 = \"\\\"I love it, I love it, I love it. I was previously using my phone calendar to remind me and that was not helping at all. I've remembered all of my doses on Coherence.\\\"\";\nconst reviews_copy_4 = \"Andie\";\nconst reviews_copy_5 = \"\\\"Coherence has helped me track my medicine for months now — I am indebted to its texting function for keeping myself more accountable. The kind messaging and gentle reminders are incredibly sweet; I don’t feel like I’m talking to a sterile robot but someone who is genuinely invested in my health.\\\"\";\nconst reviews_copy_6 = \"Jeanette\";\nconst reviews_copy_7 = \"\\\"I find Coherence very uplifting, and it makes it so easy for me to stick to my critical medications.\\\"\";\n\n\n\nconst cta_copy_1 = \"We can't wait to be a part of your medication journey.\";\nconst cta_copy_2 = \"Coherence is available now for $6.99 / month. Sign up below for free information!\";\n\n\nconst LandingPage = ({size}) => {\n    console.log(size);\n    const [name, setName] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n    const [freeTrialCode, setFreeTrialCode] = React.useState(\"\");\n    const [loading, setLoading] = React.useState(false);\n    const [submittedForm, setSubmittedForm] = React.useState(false);\n    const history = useHistory();\n\n    const formButtonState = React.useMemo(() => {\n        if (!name) {\n            return {disabled: true, text: \"Name field empty.\"}\n        }\n        if (!email) {\n            return {disabled: true, text: \"Email field empty.\"}\n        }\n        const emailRegex = /.*@.*\\..*/;\n        if (!emailRegex.test(email)) {\n            return { disabled: true, text: \"Email format is invalid.\"}\n        }\n        if (!phoneNumber) {\n            return { disabled: true, text: \"Phone number field empty.\" }\n        }\n        const nonDigitRegex = /\\D/g;\n        if (phoneNumber.replace(nonDigitRegex, \"\").length !== 10) {\n            return { disabled: true, text: \"Phone number is not 10 digits.\"}\n        }\n        if (freeTrialCode) {\n            if (freeTrialCode.toLowerCase() !== \"vpc30\") {\n                return { disabled: true, text: \"Invalid trial code.\"}\n            } else {\n                return { disabled: false, text: \"Get your free 30-day trial!\"}\n            }\n\n        }\n        return {disabled: false, text: \"Sign up\"};\n    }, [email, freeTrialCode, name, phoneNumber])\n\n\n    if (size === \"large\" || size === \"xlarge\") {\n        return (\n            <Box>\n                <Box pad={{horizontal: \"large\"}} direction=\"row\" justify=\"between\" background=\"brand\">\n                    <Heading size=\"small\">💊 coherence</Heading>\n                    <Box direction=\"row\" align=\"center\">\n                        <Paragraph margin={{right: \"medium\"}}>Already have an account?</Paragraph>\n                        <Button label=\"login\" onClick={() => {history.push(\"/login\")}}/>\n                    </Box>\n                </Box>\n                <Box align=\"center\">\n                    <Box direction=\"row\" justify=\"evenly\" align=\"center\" fill=\"horizontal\">\n                        <Box direction=\"column\" width=\"medium\" margin=\"small\">\n                            <Heading size=\"medium\" color=\"status-warning\">{heading_copy_1}</Heading>\n                            <Paragraph>{heading_copy_2}</Paragraph>\n                            <Box align=\"center\">\n                                <Button label={heading_copy_3} primary={true} href=\"#signup\" color=\"status-warning\"/>\n                            </Box>\n                        </Box>\n                        <Box width=\"medium\" direction=\"row\" margin=\"small\" pad=\"large\">\n                            <Image\n                                fit=\"contain\"\n                                src=\"https://i.ibb.co/pytvBPR/Frame-4-1.png\"\n                            />\n                        </Box>\n                    </Box>\n                </Box>\n                <Box background=\"brand\" margin={{top: \"large\", bottom: \"none\"}} align=\"center\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{differentiator_copy_1}</Heading>\n                    <Box direction=\"row\" fill=\"horizontal\" justify=\"around\">\n                        <Box direction=\"column\" align=\"center\" margin={{horizontal: \"large\", vertical: \"small\"}}>\n                            <Favorite size=\"large\"/>\n                            <Paragraph textAlign=\"center\" size=\"large\">{differentiator_copy_2}</Paragraph>\n                            <Paragraph size=\"small\" textAlign=\"center\">{differentiator_copy_5}</Paragraph>\n                        </Box>\n                        <Box direction=\"column\" align=\"center\" margin={{horizontal: \"large\", vertical: \"small\"}}>\n                            <Clear size=\"large\"/>\n                            <Paragraph textAlign=\"center\" size=\"large\">{differentiator_copy_3}</Paragraph>\n                            <Paragraph size=\"small\" textAlign=\"center\">{differentiator_copy_6}</Paragraph>\n                        </Box>\n                        <Box direction=\"column\" align=\"center\" margin={{horizontal: \"large\", vertical: \"small\"}}>\n                            <Info size=\"large\"/>\n                            <Paragraph textAlign=\"center\" size=\"large\">{differentiator_copy_4}</Paragraph>\n                            <Paragraph size=\"small\" textAlign=\"center\">{differentiator_copy_7}</Paragraph>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box align=\"center\" margin={{bottom: \"medium\"}}>\n                    <Heading size=\"small\" color=\"status-warning\">{feature_copy_1}</Heading>\n                </Box>\n                <Box align=\"center\">\n                    <Box width=\"xlarge\">\n                        <Image\n                            alignSelf=\"center\"\n                            width=\"90%\"\n                            src=\"https://i.ibb.co/G0Q0KK0/Slice-3-3.png\"\n                        />\n                    </Box>\n                </Box>\n                <Box background=\"brand\" align=\"center\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{reviews_copy_1}</Heading>\n                    <Box justify=\"between\" direction=\"row\" gap=\"large\" margin={{ horizontal: \"large\" }}>\n                        <Box width=\"33%\" align=\"center\">\n                            <Box direction=\"row\" align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_2}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_3}</Paragraph>\n                        </Box>\n                        <Box width=\"33%\" align=\"center\">\n                            <Box direction=\"row\" align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_4}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_5}</Paragraph>\n                        </Box>\n                        <Box width=\"33%\" align=\"center\">\n                            <Box direction=\"row\" align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_6}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_7}</Paragraph>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box id=\"signup\" align=\"center\" pad=\"large\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{cta_copy_1}</Heading>\n                    <Paragraph textAlign=\"center\">{cta_copy_2}</Paragraph>\n                    {submittedForm ?\n                        <Box width=\"large\" background=\"white\" round={true} pad=\"large\" align=\"center\">\n                            <Paragraph textAlign=\"center\">We've received your submission and will reach out to you shortly to complete signup. We can't wait for you to try Coherence!</Paragraph>\n                        </Box> :\n                        <Box width=\"medium\">\n                            <Paragraph>Name</Paragraph>\n                            <TextInput placeholder=\"Kari\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n                            <Paragraph>Email address</Paragraph>\n                            <TextInput placeholder=\"kari@gmail.com\" value={email} onChange={(e) => {setEmail(e.target.value)}}/>\n                            <Paragraph>Phone number</Paragraph>\n                            <TextInput placeholder=\"(123) 456-7890\" value={phoneNumber} onChange={(e) => {setPhoneNumber(e.target.value)}}/>\n                            <Paragraph>Free trial code (optional)</Paragraph>\n                            <TextInput value={freeTrialCode} onChange={(e) => {setFreeTrialCode(e.target.value)}}/>\n                            <Box width=\"small\" alignSelf=\"center\" margin={{vertical: \"large\"}}>\n                                <AnimatingButton\n                                    label={formButtonState.text}\n                                    primary={true}\n                                    disabled={formButtonState.disabled}\n                                    color={formButtonState.disabled ? \"status-error\" : \"status-ok\"}\n                                    animating={loading}\n                                    onClick={async () => {\n                                        setLoading(true);\n                                        await landingPageSignup(name, email, phoneNumber, freeTrialCode);\n                                        setLoading(false);\n                                        setSubmittedForm(true);\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                    }\n                </Box>\n                <Box direction=\"row\" pad={{horizontal: \"large\"}} justify=\"between\" background=\"brand\">\n                    <Box>\n                        <Paragraph margin={{bottom: \"small\"}} size=\"large\">Coherence</Paragraph>\n                        <Paragraph size=\"small\" margin={{vertical: \"none\"}}>60 Rausch St #203, San Francisco, CA 94103</Paragraph>\n                        <Paragraph size=\"small\" margin={{top: \"small\", bottom: \"none\"}}>‪(650) 667-1146‬</Paragraph>\n                        <Paragraph size=\"small\" margin={{top: \"small\"}}>‪contact@hellocoherence.com</Paragraph>\n                    </Box>\n                    <Box>\n                        <Anchor label=\"Privacy policy\" weight=\"normal\" margin={{top: \"medium\"}} reverse={true} href=\"/privacy\"/>\n                        <Paragraph size=\"small\">© Coherence, 2021</Paragraph>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n    if (size === \"medium\") {\n        return (\n            <Box>\n                <Box pad={{horizontal: \"medium\"}} direction=\"row\" justify=\"between\" background=\"brand\">\n                    <Heading size=\"small\">💊 coherence</Heading>\n                    <Box direction=\"row\" align=\"center\">\n                        <Button label=\"login\" onClick={() => {history.push(\"/login\")}}/>\n                    </Box>\n                </Box>\n                <Box align=\"center\">\n                    <Box direction=\"row\" justify=\"evenly\" align=\"center\" fill=\"horizontal\">\n                        <Box direction=\"column\" width=\"medium\" margin=\"small\">\n                            <Heading size=\"small\" color=\"status-warning\">{heading_copy_1}</Heading>\n                            <Paragraph>{heading_copy_2}</Paragraph>\n                            <Box align=\"center\">\n                                <Button label={heading_copy_3} primary={true} href=\"#signup\" color=\"status-warning\"/>\n                            </Box>\n                        </Box>\n                        <Box width=\"medium\" direction=\"row\" margin=\"small\" height=\"100vh\" pad={{horizontal: \"large\"}}>\n                            <Image\n                                fit=\"contain\"\n                                src=\"https://i.ibb.co/pytvBPR/Frame-4-1.png\"\n                                width=\"100%\"\n                            />\n                        </Box>\n                    </Box>\n                </Box>\n                <Box background=\"brand\" margin={{top: \"small\"}} align=\"center\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{differentiator_copy_1}</Heading>\n                    <Box direction=\"row\" fill=\"horizontal\" justify=\"around\">\n                        <Box direction=\"column\" align=\"center\" margin=\"large\">\n                            <Favorite size=\"large\"/>\n                            <Paragraph textAlign=\"center\">{differentiator_copy_2}</Paragraph>\n                            <Paragraph size=\"small\" textAlign=\"center\">{differentiator_copy_5}</Paragraph>\n                        </Box>\n                        <Box direction=\"column\" align=\"center\" margin=\"large\">\n                            <Clear size=\"large\"/>\n                            <Paragraph textAlign=\"center\">{differentiator_copy_3}</Paragraph>\n                            <Paragraph size=\"small\" textAlign=\"center\">{differentiator_copy_6}</Paragraph>\n                        </Box>\n                        <Box direction=\"column\" align=\"center\" margin=\"large\">\n                            <Info size=\"large\"/>\n                            <Paragraph textAlign=\"center\">{differentiator_copy_4}</Paragraph>\n                            <Paragraph size=\"small\" textAlign=\"center\">{differentiator_copy_7}</Paragraph>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box align=\"center\">\n                    <Heading size=\"small\" color=\"status-warning\">{feature_copy_1}</Heading>\n                </Box>\n                <Box align=\"center\">\n                    <Box width=\"xlarge\">\n                        <Image\n                            alignSelf=\"center\"\n                            width=\"90%\"\n                            src=\"https://i.ibb.co/G0Q0KK0/Slice-3-3.png\"\n                        />\n                    </Box>\n                </Box>\n                <Box background=\"brand\" align=\"center\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{reviews_copy_1}</Heading>\n                    <Box justify=\"between\" direction=\"row\" gap=\"large\" margin={{ horizontal: \"large\" }}>\n                        <Box width=\"33%\" align=\"center\">\n                            <Box align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_2}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_3}</Paragraph>\n                        </Box>\n                        <Box width=\"33%\" align=\"center\">\n                            <Box align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_4}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_5}</Paragraph>\n                        </Box>\n                        <Box width=\"33%\" align=\"center\">\n                            <Box align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_6}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_7}</Paragraph>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box id=\"signup\" align=\"center\" pad=\"large\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{cta_copy_1}</Heading>\n                    <Paragraph textAlign=\"center\">{cta_copy_2}</Paragraph>\n                    {submittedForm ?\n                        <Box width=\"large\" background=\"white\" round={true} pad=\"large\" align=\"center\">\n                            <Paragraph textAlign=\"center\">We've received your submission and will reach out to you shortly to complete signup. We can't wait for you to try Coherence!</Paragraph>\n                        </Box> :\n                        <Box width=\"large\">\n                            <Paragraph>Name</Paragraph>\n                            <TextInput placeholder=\"Kari\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n                            <Paragraph>Email address</Paragraph>\n                            <TextInput placeholder=\"kari@gmail.com\" value={email} onChange={(e) => {setEmail(e.target.value)}}/>\n                            <Paragraph>Phone number</Paragraph>\n                            <TextInput placeholder=\"(123) 456-7890\" value={phoneNumber} onChange={(e) => {setPhoneNumber(e.target.value)}}/>\n                            <Paragraph>Free trial code (optional)</Paragraph>\n                            <TextInput value={freeTrialCode} onChange={(e) => {setFreeTrialCode(e.target.value)}}/>\n                            <Box width=\"small\" alignSelf=\"center\" margin={{vertical: \"large\"}}>\n                                <AnimatingButton\n                                    label={formButtonState.text}\n                                    primary={true}\n                                    disabled={formButtonState.disabled}\n                                    color={formButtonState.disabled ? \"status-error\" : \"status-ok\"}\n                                    animating={loading}\n                                    onClick={async () => {\n                                        setLoading(true);\n                                        await landingPageSignup(name, email, phoneNumber, freeTrialCode);\n                                        setLoading(false);\n                                        setSubmittedForm(true);\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                    }\n                </Box>\n                <Box background=\"brand\" direction=\"row\" pad={{horizontal: \"large\"}} justify=\"between\">\n                    <Box>\n                        <Paragraph margin={{bottom: \"small\"}} size=\"large\">Coherence</Paragraph>\n                        <Paragraph size=\"small\" margin={{vertical: \"none\"}}>60 Rausch St #203, San Francisco, CA 94103</Paragraph>\n                        <Paragraph size=\"small\" margin={{top: \"small\", bottom: \"none\"}}>‪(650) 667-1146‬</Paragraph>\n                        <Paragraph size=\"small\" margin={{top: \"small\"}}>‪contact@hellocoherence.com</Paragraph>\n                    </Box>\n                    <Box>\n                        <Anchor label=\"Privacy policy\" weight=\"normal\" margin={{top: \"medium\"}} reverse={true} href=\"/privacy\"/>\n                        <Paragraph size=\"small\">© Coherence, 2021</Paragraph>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n    if (size === \"small\" || size === \"xsmall\") {\n        return (\n            <Box>\n                <Box pad={{horizontal: \"large\"}} direction=\"row\" justify=\"between\" background=\"brand\">\n                    <Heading size=\"small\">💊 coherence</Heading>\n                    <Box direction=\"row\" align=\"center\">\n                        <Button label=\"login\" onClick={() => {history.push(\"/login\")}}/>\n                    </Box>\n                </Box>\n                <Box align=\"center\">\n                    <Box direction=\"column\" align=\"center\" fill=\"horizontal\">\n                        <Box direction=\"column\" margin=\"large\">\n                            <Heading color=\"status-warning\">{heading_copy_1}</Heading>\n                            <Paragraph>{heading_copy_2}</Paragraph>\n                            <Box align=\"center\">\n                                <Button label={heading_copy_3} primary={true} href=\"#signup\" color=\"status-warning\"/>\n                            </Box>\n                        </Box>\n                        <Box direction=\"row\" width=\"70%\" height=\"100%\" margin={{bottom: \"medium\"}}>\n                            <Image\n                                width=\"100%\"\n                                height=\"100%\"\n                                src=\"https://i.ibb.co/pytvBPR/Frame-4-1.png\"\n                            />\n                        </Box>\n                    </Box>\n                </Box>\n                <Box background=\"brand\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{differentiator_copy_1}</Heading>\n                    <Box direction=\"row\">\n                        <Box direction=\"column\" align=\"center\" margin=\"large\">\n                            <Favorite size=\"large\"/>\n                            <Paragraph textAlign=\"center\" size=\"small\">{differentiator_copy_2}</Paragraph>\n                        </Box>\n                        <Box direction=\"column\" align=\"center\" margin=\"large\">\n                            <Clear size=\"large\"/>\n                            <Paragraph textAlign=\"center\" size=\"small\">{differentiator_copy_3}</Paragraph>\n                        </Box>\n                        <Box direction=\"column\" align=\"center\" margin=\"large\">\n                            <Info size=\"large\"/>\n                            <Paragraph textAlign=\"center\" size=\"small\">{differentiator_copy_4}</Paragraph>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box align=\"center\" margin={{horizontal: \"small\"}}>\n                    <Heading textAlign=\"center\" color=\"status-warning\" size=\"small\">{feature_copy_1}</Heading>\n                </Box>\n                <Box align=\"center\">\n                    <Box width=\"xlarge\">\n                        <Image\n                            alignSelf=\"center\"\n                            width=\"90%\"\n                            src=\"https://i.ibb.co/G0Q0KK0/Slice-3-3.png\"\n                        />\n                    </Box>\n                </Box>\n                <Box background=\"brand\" align=\"center\">\n                    <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{reviews_copy_1}</Heading>\n                    <Box gap=\"medium\" margin={{ horizontal: \"medium\" }} align=\"center\">\n                        <Box align=\"center\">\n                            <Box align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_2}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_3}</Paragraph>\n                        </Box>\n                        <Box align=\"center\">\n                            <Box align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_4}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_5}</Paragraph>\n                        </Box>\n                        <Box align=\"center\">\n                            <Box align=\"center\">\n                                <Paragraph size=\"large\">{reviews_copy_6}</Paragraph>\n                                <Box direction=\"row\" margin={{left: \"small\"}} wrap={true}>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                    <Star/>\n                                </Box>\n                            </Box>\n                            <Paragraph textAlign=\"center\">{reviews_copy_7}</Paragraph>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box id=\"signup\">\n                    <Box align=\"center\" margin=\"small\">\n                        <Heading size=\"small\" textAlign=\"center\" color=\"status-warning\">{cta_copy_1}</Heading>\n                        <Paragraph textAlign=\"center\">{cta_copy_2}</Paragraph>\n                        {submittedForm ?\n                            <Box width=\"large\" background=\"white\" round={true} pad=\"large\">\n                                <Paragraph textAlign=\"center\">We've received your submission and will reach out to you shortly to complete signup. We can't wait for you to try Coherence!</Paragraph>\n                            </Box> :\n                            <Box width=\"large\">\n                                <Paragraph>Name</Paragraph>\n                                <TextInput placeholder=\"Kari\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n                                <Paragraph>Email address</Paragraph>\n                                <TextInput placeholder=\"kari@gmail.com\" value={email} onChange={(e) => {setEmail(e.target.value)}}/>\n                                <Paragraph>Phone number</Paragraph>\n                                <TextInput placeholder=\"(123) 456-7890\" value={phoneNumber} onChange={(e) => {setPhoneNumber(e.target.value)}}/>\n                                <Paragraph>Free trial code (optional)</Paragraph>\n                                <TextInput value={freeTrialCode} onChange={(e) => {setFreeTrialCode(e.target.value)}}/>\n                                <Box width=\"small\" alignSelf=\"center\" margin={{vertical: \"large\"}}>\n                                    <AnimatingButton\n                                        label={formButtonState.text}\n                                        primary={true}\n                                        disabled={formButtonState.disabled}\n                                        color={formButtonState.disabled ? \"status-error\" : \"status-ok\"}\n                                        animating={loading}\n                                        onClick={async () => {\n                                            setLoading(true);\n                                            await landingPageSignup(name, email, phoneNumber, freeTrialCode);\n                                            setLoading(false);\n                                            setSubmittedForm(true);\n                                        }}\n                                    />\n                                </Box>\n                            </Box>\n                        }\n                    </Box>\n                </Box>\n                <Box background=\"brand\" direction=\"row\" pad={{horizontal: \"large\"}} justify=\"between\">\n                    <Box>\n                        <Paragraph margin={{bottom: \"small\"}} size=\"large\">Coherence</Paragraph>\n                        <Paragraph size=\"small\" margin={{vertical: \"none\"}}>60 Rausch St #203, San Francisco, CA 94103</Paragraph>\n                        <Paragraph size=\"small\" margin={{top: \"small\", bottom: \"none\"}}>‪(650) 667-1146‬</Paragraph>\n                        <Paragraph size=\"small\" margin={{top: \"small\"}}>‪contact@hellocoherence.com</Paragraph>\n                    </Box>\n                    <Box>\n                        <Anchor label=\"Privacy policy\" weight=\"normal\" margin={{top: \"medium\"}} reverse={true} href=\"/privacy\"/>\n                        <Paragraph size=\"small\">© Coherence, 2021</Paragraph>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n\n}\n\nexport default LandingPage;","import { Box, Heading, Paragraph } from \"grommet\";\nimport React from \"react\";\n\nconst PrivacyPolicy = () => {\n    return (\n        <Box margin=\"large\" style={{whiteSpace: \"pre-wrap\"}}>\n            <Heading size=\"small\" margin={{bottom: \"none\"}}>Coherence Privacy Policy</Heading>\n            <p>\nWe believe your medication data is highly sensitive, and you should only share as much of it as you wish. We won't require you to share the names or dosages of your medication, or even install an app. Our software will be fully accessible through your text messages and a website. You can at any time request all information associated with your account to be deleted or sent to you for your perusal.\n{\"\\n\\n\"}\nPart of what makes Coherence special is our ability to learn from your behavior patterns to better help you stick to your medication, and that requires us to collect usage data of our application. This means we may need to record metadata about text messages or website usage, such as the times we receive texts from you, or when you open the webpage. We will not save the contents of text messages.\n            </p>\n            <Paragraph size=\"xlarge\" margin={{bottom: \"none\"}}>Legal</Paragraph>\n            <Paragraph size=\"medium\">Last updated: May 25, 2021</Paragraph>\n            <p>\n            Interpretation and definitions\n            {\"\\n\\n\"}\nInterpretation\n{\"\\n\\n\"}\nThe words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.\n{\"\\n\\n\"}\nDefinitions\n{\"\\n\\n\"}\nFor the purposes of this Privacy Policy:\n{\"\\n\"}\n‍Account means a unique account created for You to access our Service or parts of our Service.\n{\"\\n\"}\n‍Company (referred to as either \"the Company\", \"We\", \"Us\" or \"Our\" in this Agreement) refers to Coherence.Cookies are small files that are placed on Your computer, mobile device or any other device by a website, containing the details of Your browsing history on that website among its many uses.\n{\"\\n\"}‍\nCountry refers to: California, United States\n{\"\\n\"}\n‍Device means any device that can access the Service such as a computer, a cellphone or a digital tablet.\n{\"\\n\"}\n‍Personal Data is any information that relates to an identified or identifiable individual.\n{\"\\n\"}\nService refers to the Website.\n{\"\\n\"}\n‍Service Provider means any natural or legal person who processes the data on behalf of the Company. It refers to third-party companies or individuals employed by the Company to facilitate the Service, to provide the Service on behalf of the Company, to perform services related to the Service or to assist the Company in analyzing how the Service is used.\n{\"\\n\"}‍\nThird-party Social Media Service refers to any website or any social network website through which a User can log in or create an account to use the Service.\n{\"\\n\"}‍\nUsage Data refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).\n{\"\\n\"}‍\nWebsite refers to Coherence, accessible from https://www.hellocoherence.com\n{\"\\n\"}\n‍You means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.\n{\"\\n\\n\"}\nCollecting and Using Your Personal Data\n{\"\\n\\n\"}\nTypes of data collected\n{\"\\n\\n\"}\nPersonal data\n{\"\\n\\n\"}\nWhile using Our Service, We may ask You to provide Us with certain personally identifiable information that can be used to contact or identify You. Personally identifiable information may include, but is not limited to:\n‍{\"\\n\\n\"}\n- Email address{\"\\n\"}\n- First name and last name{\"\\n\"}\n- Phone number{\"\\n\"}\n- Usage Data{\"\\n\"}\n‍{\"\\n\\n\"}\nUsage data\n‍{\"\\n\\n\"}\nUsage Data is collected automatically when using the Service.\n‍{\"\\n\\n\"}\nUsage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data.\n‍{\"\\n\\n\"}\nWhen You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data.\n‍{\"\\n\\n\"}\nWe may also collect information that Your browser sends whenever You visit our Service or when You access the Service by or through a mobile device.\n‍{\"\\n\\n\"}\nTracking technologies and cookies\n‍{\"\\n\\n\"}\nWe use Cookies and similar tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyze Our Service. The technologies We use may include:\n‍{\"\\n\\n\"}\n- Cookies or Browser Cookies. A cookie is a small file placed on Your Device. You can instruct Your browser to refuse all Cookies or to indicate when a Cookie is being sent. However, if You do not accept Cookies, You may not be able to use some parts of our Service. Unless you have adjusted Your browser setting so that it will refuse Cookies, our Service may use Cookies.\n‍{\"\\n\\n\"}\n- Flash Cookies. Certain features of our Service may use local stored objects (or Flash Cookies) to collect and store information about Your preferences or Your activity on our Service. Flash Cookies are not managed by the same browser settings as those used for Browser Cookies.\n‍{\"\\n\\n\"}\n- Web Beacons. Certain sections of our Service and our emails may contain small electronic files known as web beacons (also referred to as clear gifs, pixel tags, and single-pixel gifs) that permit the Company, for example, to count users who have visited those pages or opened an email and for other related website statistics (for example, recording the popularity of a certain section and verifying system and server integrity).\nUse of your personal data\n‍{\"\\n\\n\"}\nThe Company may use Personal Data for the following purposes:\n{\"\\n\"}\n- To provide and maintain our Service, including to monitor the usage of our Service.\n{\"\\n\"}\n- To manage Your Account: to manage Your registration as a user of the Service. The Personal Data You provide can give You access to different functionalities of the Service that are available to You as a registered user.\n{\"\\n\"}\n- For the performance of a contract: the development, compliance and undertaking of the purchase contract for the products, items or services You have purchased or of any other contract with Us through the Service.\n{\"\\n\"}\n- To contact You: To contact You by email, telephone calls, SMS, or other equivalent forms of electronic communication, such as a mobile application's push notifications regarding updates or informative communications related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for their implementation.\n{\"\\n\"}\n- To provide You with news, special offers and general information about other goods, services and events which we offer that are similar to those that you have already purchased or enquired about unless You have opted not to receive such information.\n{\"\\n\"}\n- To manage Your requests: To attend and manage Your requests to Us.\n{\"\\n\"}\n- For business transfers: We may use Your information to evaluate or conduct a merger, divestiture, restructuring, reorganization, dissolution, or other sale or transfer of some or all of Our assets, whether as a going concern or as part of bankruptcy, liquidation, or similar proceeding, in which Personal Data held by Us about our Service users is among the assets transferred.\n{\"\\n\"}\n- For other purposes: We may use Your information for other purposes, such as data analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to evaluate and improve our Service, products, services, marketing and your experience.\nRetention of your personal data\n‍{\"\\n\\n\"}\nThe Company will retain Your Personal Data only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use Your Personal Data to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.\n‍{\"\\n\\n\"}\nThe Company will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of Our Service, or We are legally obligated to retain this data for longer time periods.\nTransfer of your personal data\n‍{\"\\n\\n\"}\nYour information, including Personal Data, is processed at the Company's operating offices and in any other places where the parties involved in the processing are located. It means that this information may be transferred to — and maintained on — computers located outside of Your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from Your jurisdiction.\n‍‍{\"\\n\\n\"}\nTour consent to this Privacy Policy followed by Your submission of such information represents Your agreement to that transfer.\n‍{\"\\n\\n\"}\nThe Company will take all steps reasonably necessary to ensure that Your data is treated securely and in accordance with this Privacy Policy and no transfer of Your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of Your data and other personal information.\nDisclosure of your personal data\n‍{\"\\n\\n\"}\nBusiness transactions{\"\\n\"}\nIf the Company is involved in a merger, acquisition or asset sale, Your Personal Data may be transferred. We will provide notice before Your Personal Data is transferred and becomes subject to a different Privacy Policy.\n‍{\"\\n\\n\"}\nLaw enforcement{\"\\n\"}\nUnder certain circumstances, the Company may be required to disclose Your Personal Data if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).\n‍{\"\\n\\n\"}\nOther legal requirements{\"\\n\"}\nThe Company may disclose Your Personal Data in the good faith belief that such action is necessary to:{\"\\n\"}\n- Comply with a legal obligation{\"\\n\"}\n- Protect and defend the rights or property of the Company{\"\\n\"}\n- Prevent or investigate possible wrongdoing in connection with the Service{\"\\n\"}\n- Protect the personal safety of Users of the Service or the public{\"\\n\"}\n- Protect against legal liability{\"\\n\"}\nSecurity of your personal data{\"\\n\"}\n{\"\\n\\n\"}\nThe security of Your Personal Data is important to Us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While We strive to use commercially acceptable means to protect Your Personal Data, We cannot guarantee its absolute security.\n{\"\\n\\n\"}\nChildren's privacy\n{\"\\n\\n\"}\nOur Service does not address anyone under the age of 13. We do not knowingly collect personally identifiable information from anyone under the age of 13. If You are a parent or guardian and You are aware that Your child has provided Us with Personal Data, please contact Us. If We become aware that We have collected Personal Data from anyone under the age of 13 without verification of parental consent, We take steps to remove that information from Our servers.\n{\"\\n\\n\"}\nIf We need to rely on consent as a legal basis for processing Your information and Your country requires consent from a parent, We may require Your parent's consent before We collect and use that information.\n{\"\\n\\n\"}\nLinks to other websites\n{\"\\n\\n\"}\nOur Service may contain links to other websites that are not operated by Us. If You click on a third party link, You will be directed to that third party's site. We strongly advise You to review the Privacy Policy of every site You visit.\n{\"\\n\\n\"}\nWe have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.\n{\"\\n\\n\"}\nChanges to this privacy policy\n{\"\\n\\n\"}\nWe may update Our Privacy Policy from time to time. We will notify You of any changes by posting the new Privacy Policy on this page.\n{\"\\n\\n\"}\nWe will let You know via email and/or a prominent notice on Our Service, prior to the change becoming effective and update the \"Last updated\" date at the top of this Privacy Policy.\n‍{\"\\n\\n\"}\nYou are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.\n{\"\\n\\n\"}\nContact us\n{\"\\n\\n\"}\nIf you have any questions about this Privacy Policy, You can contact us:{\"\\n\"}\n- By email: contact@hellocoherence.com\n            </p>\n        </Box>\n    );\n};\n\nexport default PrivacyPolicy;","import { Box, Button, Heading, Layer, Paragraph, Select, Spinner, Tab, Tabs, TextInput } from \"grommet\";\nimport { Calendar, ContactInfo, Close, Home, FormPreviousLink } from \"grommet-icons\";\nimport React from \"react\";\n\nimport { getUserProfile, updateUserPassword, updateUserTimezone } from \"../api\";\nimport { useHistory } from \"react-router-dom\";\nimport Payment from \"./Payment\";\nimport AnimatingButton from \"../components/AnimatingButton\";\n\nconst Settings = () => {\n    const history = useHistory();\n    const [userProfileData, setUserProfileData] = React.useState(null);\n    const [editingField, setEditingField] = React.useState(null);\n    const [animating, setAnimating] = React.useState(false);\n    const [newPassword1, setNewPassword1] = React.useState(\"\");\n    const [newPassword2, setNewPassword2] = React.useState(\"\");\n    const closeEditingWindow = React.useCallback(() => {\n        setUserProfileData({...userProfileData, updated: userProfileData.original});\n        setEditingField(null);\n    }, [userProfileData]);\n    const pullUserProfileData = React.useCallback(async () => {\n        const response = await getUserProfile();\n        if (response === null) {\n            history.push(\"/welcome\");\n            return;\n        }\n        setUserProfileData({original: response, updated: response});\n        setEditingField(null);\n        setAnimating(false);\n    },[history])\n    React.useEffect(() => {\n        pullUserProfileData();\n    }, [history, pullUserProfileData]);\n    return (\n        <Box margin=\"large\">\n            <Box align=\"start\">\n                <Button\n                    icon={<Box direction=\"row\"><FormPreviousLink/><Home/></Box>}\n                    label=\" \"\n                    size=\"small\"\n                    onClick={() => {history.push(\"/\")}}\n                />\n            </Box>\n            <Heading size=\"small\">Settings</Heading>\n            <Tabs alignSelf=\"stretch\">\n                <Tab title=\"Profile\" icon={<ContactInfo />}>\n                    {userProfileData !== null ?\n                        <Box>\n                            <Box direction=\"row\" align=\"center\" justify=\"between\">\n                                <Paragraph>Timezone: {userProfileData.original.timezone}</Paragraph>\n                                <Button label=\"edit\" size=\"small\" onClick={() => {setEditingField(\"timezone\")}}/>\n                            </Box>\n                            <Box direction=\"row\" align=\"center\" justify=\"between\">\n                                <Paragraph>Password: ••••••••</Paragraph>\n                                <Button label=\"edit\" size=\"small\" onClick={() => {setEditingField(\"password\")}}/>\n                            </Box>\n                        </Box>\n                        : <Spinner />\n                    }\n                    {editingField === \"timezone\" ? (\n                        <Layer\n                            onEsc={closeEditingWindow}\n                            onClickOutside={closeEditingWindow}\n                            responsive={false}\n                        >\n                            <Box width=\"90vw\" pad=\"large\">\n                                <Box direction=\"row\" justify=\"between\">\n                                    <Paragraph size=\"large\">Edit timezone</Paragraph>\n                                    <Button icon={<Close />} onClick={closeEditingWindow} />\n                                </Box>\n                                <Box align=\"center\">\n                                    <Select\n                                        options={[\"US/Pacific\", \"US/Mountain\", \"US/Central\", \"US/Eastern\"]}\n                                        value={userProfileData.updated.timezone}\n                                        onChange={({value}) => {\n                                            setUserProfileData({...userProfileData, updated: {...userProfileData.updated, timezone: value}});\n                                        }}\n                                    />\n                                    <Box margin={{vertical: \"medium\"}}>\n                                        <AnimatingButton\n                                            animating={animating}\n                                            label=\"Update timezone\"\n                                            onClick={async () => {\n                                                setAnimating(true);\n                                                await updateUserTimezone(userProfileData.updated.timezone);\n                                                await pullUserProfileData();\n                                            }}\n                                        />\n                                    </Box>\n                                    <Paragraph size=\"small\">\n                                        Note: Your dose window times will automatically be transferred to the new timezone.\n                                    </Paragraph>\n                                </Box>\n                            </Box>\n                        </Layer>\n                    ) : null\n                    }\n                    {editingField === \"password\" ? (\n                        <Layer\n                            onEsc={closeEditingWindow}\n                            onClickOutside={closeEditingWindow}\n                            responsive={false}\n                        >\n                            <Box width=\"90vw\" pad=\"large\">\n                                <Box direction=\"row\" justify=\"between\">\n                                    <Paragraph size=\"large\">Update password</Paragraph>\n                                    <Button icon={<Close />} onClick={closeEditingWindow} />\n                                </Box>\n                                <Paragraph>Enter new password twice for validation.</Paragraph>\n                                <Box align=\"center\">\n                                    <TextInput type=\"password\" placeholder=\"••••••••\" value={newPassword1} onChange={(event) => {setNewPassword1(event.target.value)}}/>\n                                    <TextInput type=\"password\" placeholder=\"••••••••\" value={newPassword2} onChange={(event) => {setNewPassword2(event.target.value)}}/>\n                                    <Box margin={{vertical: \"medium\"}}>\n                                        <AnimatingButton\n                                            animating={animating}\n                                            label=\"Update password\"\n                                            onClick={async () => {\n                                                setAnimating(true);\n                                                await updateUserPassword(newPassword1);\n                                                await pullUserProfileData();\n                                                setNewPassword1(\"\");\n                                                setNewPassword2(\"\");\n                                            }}\n                                            disabled={ !newPassword1 || newPassword1 !== newPassword2 }\n                                        />\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Layer>\n                    ) : null\n                    }\n                </Tab>\n                {userProfileData &&\n                !userProfileData.original.early_adopter &&\n                userProfileData.original.onboarding_type === \"standard\" ? (<Tab title=\"Subscription\" icon={<Calendar/>}>\n                    <Payment />\n                </Tab>) : null}\n            </Tabs>\n        </Box>\n    )\n}\n\nexport default Settings;","import './App.css';\nimport Home from './pages/Home';\nimport Intro from './pages/Intro';\nimport Payment from './pages/Payment';\nimport FinishOnboarding from './pages/FinishOnboarding';\n\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { ResponsiveContext } from \"grommet\";\nimport LandingPage from './pages/LandingPage';\nimport PrivacyPolicy from './pages/PrivacyPolicy';\nimport Settings from './pages/Settings';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path={'/'} render={() => <Home />}/>\n            <Route exact path={'/login'} render={() => <Intro />}/>\n            <Route exact path={'/payment'} render={() => <Payment />}/>\n            <Route exact path={'/finishOnboarding'} render={() => <FinishOnboarding />}/>\n            <Route exact path={'/welcome'} render={() => (\n              <ResponsiveContext.Consumer>\n                {(size) => {\n                  return <LandingPage size={size}/>\n                }}\n              </ResponsiveContext.Consumer>\n            )}/>\n            <Route exact path={\"/privacy\"} render={() => <PrivacyPolicy />}/>\n            <Route exact path={\"/settings\"} render={() => <Settings />}/>\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\nimport { Grommet } from \"grommet\";\n\nconst grommetTheme = {\n  global: {\n    colors: {\n      brand: \"#002864\",\n      text: {light: \"#002864\"},\n      paragraph: {light: \"#002864\"},\n      background: \"#FFF\"\n    },\n    breakpoints: {\n      xsmall: {\n        value: 375,\n      },\n      small: {\n        value: 400,\n      },\n      medium: {\n        value: 768,\n      },\n      large: {\n        value: 1024,\n      },\n      xlarge: {\n        value: 1366,\n      },\n    },\n  },\n  spinner: {\n    container: {\n      color: {\n        light: \"#002864\",\n        dark: \"FFF\"\n      }\n    }\n  },\n  tab: {\n    active: {\n      background: \"brand\"\n    },\n    pad: \"small\"\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <Grommet theme={grommetTheme} themeMode=\"light\">\n        <App />\n      </Grommet>\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}